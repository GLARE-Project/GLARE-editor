{"version":3,"sources":["pages/home/Home.js","utils/utils.js","pages/CreateProject/CreateProject.js","pages/UpdateProject/UpdateProject.js","pages/FAQ/FAQ.js","pages/CreateLocation/Map/MapField.js","pages/CreateLocation/Library/LibraryField.js","pages/CreateLocation/Menu/MenuField.js","pages/CreateLocation/CreateLocation.js","App.js","index.js"],"names":["Home","className","src","alt","createFileList","fileName","fileListObj","DataTransfer","items","add","File","files","CreateProject","useContext","Context","Answers","changeAnswer","useState","project_name","localAnswers","setLocalAnswers","downloadURL","setURL","useEffect","document","querySelector","intro_audio","homepage_image","handleChange","propertytName","value","jsonData","JSON","stringify","blob","Blob","type","URL","createObjectURL","generateURL","htmlFor","id","placeholder","onChange","e","target","accept","name","href","download","UpdateProject","history","setAnswers","reader","FileReader","readAsText","onload","parse","result","push","pathname","FAQ","MapField","handleLocation","currentLatitude","currentLongitude","mapRef","useRef","position","setPosition","zoom","setZoom","zoomLocation","useCallback","latlong","current","leafletElement","flyTo","animate","L","require","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","lat","lng","Fragment","style","height","margin","center","onClick","latlng","ref","minZoom","TileLayer","attribution","url","Marker","Popup","LibraryField","handleLibrary","libraryPages","contentTypes","selectedContent","setContent","pictures","SetPictures","audio","SetAudio","links","SetLinks","picturesMedia","destructorObject","filter","media","title","pop","forEach","pictureObj","index","item","audioMedia","linksMedia","handlePicture","old","item_description","customBuildObj","map","contentName","handleAudio","handleSaveAll","handleLink","buildObject","mediaObj","hasOwnProperty","content_items","key","content","parseInt","length","picture","audioObj","link","MenuField","handleMenu","menuItems","menu","setMenu","menuObj","background_image","descriptive_audio","handleMenuSave","description","CreateLocation","useParams","currentID","setCurrentID","latitude","longitude","AR_overlay","panorama_image","VR_overylay","overlay_size","overlay_offset_x","overlay_offset_y","start_audio","main_pages","media_pages","hotspotData","setHotspotData","hotspots","handleProjectSave","updatedAnswer","objectName","newAnswer","min","max","data","React","createContext","Provider","children","propName","val","answers","App","to","exact","path","component","Consumer","location","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0741464b.chunk.js","sourcesContent":["import React from 'react';\nimport './home.css';\nfunction Home() {\n\n    return (\n        <div className=\"homepage\">\n            <img src={\"/images/ConfigPhone.png\"} alt=\"logo\" />\n            <div className={\"side-text\"}>\n                <h1>GLARE</h1>\n                <h2>Configuration Editor</h2>\n                <h5> Welcome to the GLARE Configuration Editor! Glare is an Augumented Reality Editor enabling the development of individual experiences regarding humanties and beyond.</h5>\n            </div>\n        </div>\n    )\n};\nexport default Home;","  \n  // create the file list, so the fileName can be set\n  // this is to be used to set the file input types\n  // ex: input.files = new createFileList('image.png')\nconst createFileList = (fileName) => {\n    let fileListObj = new DataTransfer();\n    // if the fileName passed add that file\n    if (fileName) fileListObj.items.add(new File([''], fileName))\n    return fileListObj.files\n  };\n\nexport default createFileList;","import React, { useState, useContext, useEffect } from 'react';\nimport \"./CreateProject.scss\"\nimport { Context } from \"./../../App\"\nimport createFileList from \"./../../utils/utils\";\n\nconst CreateProject = () => {\n\n    const { Answers, changeAnswer } = useContext(Context);\n    \n    const [localAnswers, setLocalAnswers] = useState({ project_name: \"\"});\n\n    const [downloadURL, setURL] = useState(null);\n\n    // on load, if the id exists, load its data\n    useEffect(() => {\n        setLocalAnswers(Answers);\n        // improper way of doing it, but can't seem to set files attribute properly\n        document.querySelector(\"#intro-audio\").files = createFileList(Answers.intro_audio);\n        document.querySelector(\"#homepage-img\").files = createFileList(Answers.homepage_image);\n    }, [Answers])\n    \n    // generate the download URL\n    const generateURL = () => {\n        const jsonData = JSON.stringify(Answers);\n        // turn it into a blob object\n        const blob = new Blob([jsonData], { type: \"application/json\" })\n        // create blob url for the browser to download\n        return URL.createObjectURL(blob);\n    };\n\n    // if a value is changed it must:\n    const handleChange = (propertytName, value) => {\n        // set the new answer value\n        changeAnswer(propertytName, value);\n        setLocalAnswers(Answers);\n        // regenerate the URL\n        setURL(generateURL());\n    };\n\n    return (\n        <div className=\"CreateProject\">\n            <form className=\"pure-form pure-form-aligned\">\n                <h1>New Project</h1>\n                <h2>Homepage Content</h2>\n                <div className=\"pure-control-group\">\n                    <label htmlFor=\"project-name\">Project Name</label>\n                    <input\n                        type=\"text\" id=\"project-name\" placeholder=\"enter project name\"\n                        value={localAnswers.project_name}\n                        onChange={e => handleChange(\"project_name\", e.target.value)}\n                    />\n                </div>\n\n                <div className=\"pure-control-group\">\n                    <label htmlFor=\"intro-audio\">Introduction Audio</label>\n                    <input\n                        type=\"file\" id=\"intro-audio\" accept=\"audio/*\"\n                        onChange={e => handleChange(\"intro_audio\", e.target.files[0]['name'])}\n                    />\n                </div>\n\n                <div className=\"pure-control-group\">\n                    <label htmlFor=\"homepage-img\">Homepage Image</label>\n                    <input \n                        type=\"file\" id=\"homepage-img\" accept=\"image/*\" name=\"file.jpg\"\n                        onChange={e => handleChange(\"homepage_image\", e.target.files[0]['name'])}\n                    />\n                </div>\n\n                <br />\n                {downloadURL && (<a className=\"pure-button download-btn\" href={downloadURL} download=\"markers.json\">Download File</a>)}\n            </form>\n        </div>\n    )\n};\n\n\n\nexport default CreateProject;","import React, { useContext } from 'react';\nimport './UpdateProject.css';\nimport { Context } from \"../../App\"\n\nconst UpdateProject = ({ history }) => {\n    const { setAnswers } = useContext(Context);\n\n    const handleChosenFile = (e) => {\n        let files = e.target.files;\n        let reader = new FileReader();\n        reader.readAsText(files[0]);\n        reader.onload = () => {\n            setAnswers(JSON.parse(reader.result));\n            history.push({\n                pathname: '/project'\n            })\n        }\n    }\n    return (\n        <form>\n            <div >\n                <h1>Project</h1>\n                <h2>Configuration Editor</h2>\n                <input type='file' id='file' className='input-file'\n                    accept='.json' onChange={handleChosenFile} />\n            </div>\n        </form>\n    )\n}\nexport default UpdateProject;","import React from 'react';\nimport './FAQ.scss';\nfunction FAQ() {\n\nreturn (\n            <div className=\"FAQ-ctn\">\n                    <h1><b>FAQ</b></h1>\n                    <h3>Subject 1</h3>\n                    <div>\n                    <dl>\n                        <dt><b>FAQ 1</b></dt>\n                        <dd><small>Answer to FAQ 1</small></dd>\n                        <hr/>\n                        <dt><b>FAQ 2</b></dt>\n                        <dd><small>Answer to FAQ 2</small></dd>\n                        <hr/>\n                        <dt><b>FAQ 3</b></dt>\n                        <dd><small>Answer to FAQ 3</small></dd>\n                        <hr/>\n                    </dl>\n                    </div>\n            </div>\n            )\n};\nexport default FAQ;","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst MapField = ({ handleLocation, currentLatitude, currentLongitude }) => {\n\n  const mapRef = useRef(null);\n  \n  const [position, setPosition] = useState([currentLatitude, currentLongitude]);\n  const [zoom, setZoom] = useState(2);\n\n     const zoomLocation = useCallback((latlong) => {\n    mapRef.current.leafletElement.flyTo(latlong, zoom, {animate: true});\n  }, [zoom]);\n\n  useEffect(() => {\n    const L = require(\"leaflet\");\n\n    delete L.Icon.Default.prototype._getIconUrl;\n\n    L.Icon.Default.mergeOptions({\n      iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n      iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n      shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n    });\n    \n    setPosition([currentLatitude, currentLongitude]);\n    zoomLocation({lat: currentLatitude, lng: currentLongitude});\n\n  }, [currentLatitude, currentLongitude, zoomLocation]);\n\n  const changeLocation = (e) => {\n    const {lat, lng} = e.latlng;\n    setZoom(10);\n    handleLocation(lat, lng);\n  }\n\n  return (\n    <React.Fragment>\n      <LeafletMap \n        style={{height: '20em', margin: '1em 0'}}\n        center={position} zoom={zoom}\n        onClick={changeLocation}\n        ref={mapRef}\n        minZoom={2}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n        />\n        {position[0] !== 0 && position[1] !== 0 &&\n        <Marker position={position}>\n          <Popup>\n            <span>selected location</span>\n          </Popup>\n        </Marker>\n        }\n      </LeafletMap>\n    </React.Fragment>\n  )\n};\n\nexport default MapField;","import React, { useState, useEffect } from 'react';\nimport createFileList from \"../../../utils/utils\";\n\n// TODO: clean up saving system\n// remove any place where we SetPictures due to dependency exhaust - but it's ugly\nconst LibraryField = ({ handleLibrary, libraryPages }) => {\n\n    const contentTypes = [\"Pictures\", \"Audio\", \"Links\"];\n\n    const [selectedContent, setContent] = useState(0);\n\n    const [pictures, SetPictures] = useState([]);\n    const [audio, SetAudio] = useState([]);\n    const [links, SetLinks] = useState([]);\n\n\n    useEffect(() => {\n        const picturesMedia = destructorObject(libraryPages.filter(media => media.title === \"Pictures\").pop());\n        // cheap way of checking if two arrays are different - to prevent dependency exhaust\n        if (JSON.stringify(pictures) === JSON.stringify(picturesMedia))\n            pictures.forEach((pictureObj, index) => {\n                document.querySelector(`#content-image-${index}`).files = createFileList(pictureObj.item);\n            });\n        else SetPictures(picturesMedia)\n\n        const audioMedia = destructorObject(libraryPages.filter(media => media.title === \"Audio\").pop());\n        SetAudio(audioMedia);\n\n        const linksMedia = destructorObject(libraryPages.filter(media => media.title === \"Links\").pop());\n        SetLinks(linksMedia);\n\n    }, [libraryPages, pictures]); // picture isn't added to dependency since adding a new item will result cause a reload\n\n\n    const handleSelect = (e) => {\n        setContent(e.target.value);\n    };\n\n    const handlePicture = (index, type, e) => {\n        let old = pictures;\n\n        if (type === \"image\") {\n            old[index].item = e.target.files[0]['name'];\n        } else {\n            old[index].item_description = e.target.value;\n        }\n\n        // building using the new data\n        const customBuildObj = contentTypes.map((contentName, index) => {\n            const items = index === 1 ? audio : (index === 2 ? links : old);\n            return (\n                {\n                    \"title\": contentName,\n                    \"content_type\": index,\n                    \"content_items\": items\n                }\n            )\n        });\n\n        handleLibrary(customBuildObj);\n    };\n\n    const handleAudio = (index, type, e) => {\n        let old = audio;\n\n        if (type === \"audio\") {\n            old[index].item = e.target.value;\n        } else {\n            old[index].item_description = e.target.value;\n        }\n\n        SetAudio(old);\n\n        handleSaveAll();\n    };\n\n    const handleLink = (index, type, e) => {\n        let old = links;\n\n        if (type === \"link\") {\n            old[index].item = e.target.value;\n        } else {\n            old[index].item_description = e.target.value;\n        }\n\n        SetLinks(old);\n\n        handleSaveAll();\n    };\n\n    // build the predefined structure to prepare it for saving\n    const buildObject = contentTypes.map((contentName, index) => {\n        const items = index === 1 ? audio : (index === 2 ? links : pictures);\n        return (\n            {\n                \"title\": contentName,\n                \"content_type\": index,\n                \"content_items\": items\n            }\n        )\n    });\n\n    const destructorObject = mediaObj => {\n        if (mediaObj && mediaObj.hasOwnProperty(\"content_items\"))\n            return mediaObj.content_items.map(media => {\n                return {\n                    item: media.item,\n                    item_description: media.item_description\n                }\n            })\n        else return []\n    };\n\n\n    // save all the data as a predefined structure\n    const handleSaveAll = () => {\n        handleLibrary(buildObject);\n    };\n\n    const createContent = () => {\n\n        const content = {\n            \"item\": \"\",\n            \"item_description\": \"\"\n        };\n\n        const customBuildObj = contentTypes.map((contentName, index) => {\n            let items = index === 1 ? audio : (index === 2 ? links : pictures);\n            // we add the new object to the selected item\n            if (parseInt(selectedContent) === index) items = [...items, content]\n            return (\n                {\n                    \"title\": contentName,\n                    \"content_type\": index,\n                    \"content_items\": items\n                }\n            )\n        });\n\n        handleLibrary(customBuildObj);\n\n    };\n\n    return (\n        <React.Fragment>\n            <div className=\"pure-control-group\">\n                <label htmlFor=\"content-type\">Content Type</label>\n                <select name=\"content\" id=\"content-type\" onChange={handleSelect} value={selectedContent}>\n                    {contentTypes.map((contentName, index) => {\n                        return (<option key={index} value={index}>{contentName}</option>)\n                    })}\n                </select>\n            </div>\n            <div className=\"pure-controls\">\n                <button type=\"button\" className=\"pure-button\" onClick={createContent}>Create Content</button>\n            </div>\n\n\n            {pictures.length > 0 && <legend>Pictures</legend>}\n            {pictures.map((picture, index) => {\n                return (\n                    <React.Fragment key={index}>\n\n                        <div className=\"pure-control-group\">\n                            <label htmlFor={`content-image-${index}`}>Image file</label>\n                            <input\n                                type=\"file\" id={`content-image-${index}`} placeholder=\"select image\" accept=\"image/*\"\n                                onChange={e => handlePicture(index, \"image\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group\">\n                            <label htmlFor={`picture-descript-${index}`}>Picture Caption</label>\n                            <input\n                                type=\"text\" id={`picture-descript-${index}`} placeholder=\"enter caption\"\n                                value={picture.item_description}\n                                onChange={e => handlePicture(index, \"description\", e)}\n                            />\n\n                        </div>\n                    </React.Fragment>\n                )\n            })}\n\n            {audio.length > 0 && <legend>Audio</legend>}\n            {audio.map((audioObj, index) => {\n                return (\n                    <React.Fragment key={index}>\n\n                        <div className=\"pure-control-group\">\n                            <label htmlFor={`content-audio-${index}`}>Audio Link</label>\n                            <input\n                                type=\"text\" id={`content-audio-${index}`} placeholder=\"Audio Link\"\n                                value={audioObj.item}\n                                onChange={e => handleAudio(index, \"audio\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group\">\n                            <label htmlFor={`audio-descript-${index}`}>Audio Description</label>\n                            <input\n                                type=\"text\" id={`audio-descript-${index}`} placeholder=\"enter description\"\n                                value={audioObj.item_description}\n                                onChange={e => handleAudio(index, \"description\", e)}\n                            />\n                        </div>\n\n                    </React.Fragment>\n                )\n            })}\n\n            {links.length > 0 && <legend>Links</legend>}\n            {links.map((link, index) => {\n                return (\n                    <React.Fragment key={index}>\n\n                        <div className=\"pure-control-group\">\n                            <label htmlFor={`content-link-${index}`}>Link URL</label>\n                            <input\n                                type=\"text\" id={`content-link-${index}`} placeholder=\"enter link\"\n                                value={link.item}\n                                onChange={e => handleLink(index, \"link\", e)}\n                            />\n                        </div>\n\n\n                        <div className=\"pure-control-group\">\n                            <label htmlFor={`link-descript-${index}`}>Content Description</label>\n                            <input\n                                type=\"text\" id={`link-descript-${index}`} placeholder=\"enter description\"\n                                value={link.item_description}\n                                onChange={e => handleLink(index, \"description\", e)}\n                            />\n                        </div>\n\n                    </React.Fragment>\n                )\n            })}\n\n        </React.Fragment>\n    )\n\n}\n\nexport default LibraryField;\n\n\n","import React, { useState, useEffect } from 'react';\nimport createFileList from \"../../../utils/utils\";\n\nconst MenuField = ({ handleMenu, menuItems }) => {\n\n    const [menu, setMenu] = useState([]);\n\n    useEffect(() => {\n\n        if (JSON.stringify(menu) === JSON.stringify(menuItems))\n            menuItems.forEach((menuObj, index) => {\n                document.querySelector(`#menu-bg-image-${index}`).files = createFileList(menuObj.background_image);\n                document.querySelector(`#menu-audio-${index}`).files = createFileList(menuObj.descriptive_audio);\n            });\n        else setMenu(menuItems)\n\n    }, [menuItems, menu]);\n\n    // add the inital link object to the queue\n    const createLink = () => {\n        const content = {\n            \"title\": \"\",\n            \"description\": \"\",\n            \"background_image\": \"\",\n            \"descriptive_audio\": \"\"\n\n        };\n        handleMenu([...menu, content]);\n    };\n\n    // any changes that is made to the input, we should update the state and global values\n    const handleMenuSave = (index, type, e) => {\n        let old = menu;\n\n        const value = (type === \"title\" || type === \"description\") ? e.target.value : e.target.files[0]['name'];\n        old[index] = { ...old[index], ...{ [type]: value } };\n      \n        handleMenu(old);\n    };\n\n    return (\n        <>\n            <div className=\"pure-controls\">\n                <button type=\"button\" className=\"pure-button\" onClick={createLink}>Create Link</button>\n            </div>\n\n            {menu.length > 0 && <legend>Menu Link</legend>}\n\n            {menu.map((menuObj, index) => {\n                return (\n                    <React.Fragment key={index}>\n\n                        <div className=\"pure-control-group\">\n                            <label htmlFor={`menu-title-${index}`}>Menu Link Title</label>\n                            <input\n                                type=\"text\" id={`menu-title-${index}`} placeholder=\"enter title\"\n                                value={menuObj.title}\n                                onChange={e => handleMenuSave(index, \"title\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group\">\n                            <label htmlFor={`menu-descript-${index}`}>Menu Link Description</label>\n                            <input\n                                type=\"text\" id={`menu-descript-${index}`} placeholder=\"enter description\"\n                                value={menuObj.description}\n                                onChange={e => handleMenuSave(index, \"description\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group\">\n                            <label htmlFor={`menu-bg-image-${index}`}>Background Image</label>\n                            <input\n                                type=\"file\" id={`menu-bg-image-${index}`} placeholder=\"select image\" accept=\"image/*\"\n                                onChange={e => handleMenuSave(index, \"background_image\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group\">\n                            <label htmlFor={`menu-audio-${index}`}>Descriptive Audio</label>\n                            <input\n                                type=\"file\" id={`menu-audio-${index}`} placeholder=\"select audio\" accept=\"audio/*\"\n                                onChange={e => handleMenuSave(index, \"descriptive_audio\", e)}\n                            />\n                        </div>\n                    </React.Fragment>\n                )\n            })}\n        </>\n    );\n}\n\nexport default  MenuField;","import React, { useState, useContext, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport MapField from \"./Map/MapField\";\nimport LibraryField from \"./Library/LibraryField\";\nimport MenuField from \"./Menu/MenuField\";\nimport { Context } from \"./../../App\";\nimport createFileList from \"./../../utils/utils\";\nimport './CreateLocation.css';\n\n\nfunction CreateLocation() {\n\n  const { Answers, changeAnswer } = useContext(Context);\n\n  const { id } = useParams();\n  const [currentID, setCurrentID] = useState(id);\n\n  const [hotspotData, setHotspotData] = useState({\n    // location related\n    name: \"\",\n    latitude: 0,\n    longitude: 0,\n    // AR related\n    AR_overlay: \"\",\n    // VR related\n    panorama_image: \"\",\n    VR_overylay: \"\",\n    overlay_size: 10,\n    overlay_offset_x: 0,\n    overlay_offset_y: 0,\n    // audio related\n    start_audio: \"\",\n    // the links\n    main_pages: [],\n    // the library\n    media_pages: []\n  });\n\n  // on load, if the id exists, load its data\n  useEffect(() => {\n    if (id !== \"new\" && Answers.hotspots.length > id) {\n      const hotspotData = Answers.hotspots[id];\n      setHotspotData(hotspotData);\n      // improper way of doing it, but can't seem to set files attribute properly\n      document.querySelector(\"#ar-overlay\").files = createFileList(hotspotData.AR_overlay);\n      document.querySelector(\"#panorama-img\").files = createFileList(hotspotData.panorama_image);\n      document.querySelector(\"#vr-overlay\").files = createFileList(hotspotData.VR_overylay);\n      document.querySelector(\"#narration-audio\").files = createFileList(hotspotData.start_audio);\n    }\n  }, [Answers.hotspots, id])\n\n  const handleProjectSave = updatedAnswer => {\n    // we add the new item to the array and set it to the current hotspot\n    if (currentID === \"new\") {\n      setCurrentID(Answers.hotspots.length);\n      changeAnswer(\"hotspots\", [...Answers.hotspots, updatedAnswer]);\n    // we only need to update the existing data\n    } else {\n      let old = Answers.hotspots;\n      old[currentID] = updatedAnswer;\n      changeAnswer(\"hotspots\", old)\n    }\n  };\n\n  // if a value is changed it must:\n  const handleChange = (objectName, value) => {\n    // set the new answer value\n    const newAnswer = { ...hotspotData, ...{ [objectName]: value } };\n    setHotspotData(newAnswer);\n    handleProjectSave(newAnswer)\n  };\n\n  const handleLocation = (lat, lng) => {\n    const newAnswer = {\n      ...hotspotData,\n      latitude: lat,\n      longitude: lng\n    };\n    setHotspotData(newAnswer);\n    handleProjectSave(newAnswer);\n  }\n\n  return (\n    <div className=\"newConfigMain\">\n      <form className=\"pure-form pure-form-aligned\">\n       <div className=\"pure-control-group\">\n        <label htmlFor=\"hotspot-name\">Hotspot name</label>\n        <input\n          type=\"text\" id=\"hotspot-name\" placeholder=\"enter name\"\n          value={hotspotData.name}\n          onChange={e => handleChange(\"name\", e.target.value)}\n        />\n      </div>\n\n      <MapField\n        handleLocation={handleLocation}\n        currentLatitude={hotspotData.latitude}\n        currentLongitude={hotspotData.longitude}\n      />\n\n      <div className=\"pure-control-group\">\n        <label htmlFor=\"latitude\">Latitude</label>\n        <input\n          type=\"number\" id=\"latitude\" placeholder=\"enter latitude\" min={-90} max={90}\n          value={hotspotData.latitude != null ? hotspotData.latitude : \"\"}\n          onChange={e => handleChange(\"latitude\", e.target.value)}\n        />\n      </div>\n\n      <div className=\"pure-control-group\">\n        <label htmlFor=\"longitude\">Longitude</label>\n        <input\n          type=\"number\" id=\"longitude\" placeholder=\"enter longitude\" min={-180} max={80}\n          value={hotspotData.longitude != null ? hotspotData.longitude : \"\"}\n          onChange={e => handleChange(\"longitude\", e.target.value)}\n        />\n      </div>\n\n\n      <div className=\"pure-control-group\">\n        <label htmlFor=\"ar-overlay\">AR Overlay</label>\n        <input\n          type=\"file\" id=\"ar-overlay\" placeholder=\"select image\" accept=\"image/*\"\n          onChange={e => handleChange(\"AR_overlay\", e.target.files[0]['name'])}\n        />\n        \n      </div>\n\n\n      <div className=\"pure-control-group\">\n        <label htmlFor=\"panorama-img\">Panorama image</label>\n        <input\n          type=\"file\" id=\"panorama-img\" placeholder=\"select image\" accept=\"image/*\"\n          onChange={e => handleChange(\"panorama_image\", e.target.files[0]['name'])}\n        />\n        \n      </div>\n\n\n      <div className=\"pure-control-group\">\n        <label htmlFor=\"vr-overlay\">VR Overlay</label>\n        <input\n          type=\"file\" id=\"vr-overlay\" placeholder=\"select image\" accept=\"image/*\"\n          onChange={e => handleChange(\"VR_overylay\", e.target.files[0]['name'])}\n        />\n        \n      </div>\n\n      <div className=\"pure-control-group\">\n        <label htmlFor=\"narration-audio\">Narration Audio</label>\n        <input\n          type=\"file\" id=\"narration-audio\" placeholder=\"select audio\" accept=\"audio/*\"\n          onChange={e => handleChange(\"start_audio\", e.target.files[0]['name'])}\n        />\n        \n      </div>\n\n      <LibraryField \n        handleLibrary={data => handleChange(\"media_pages\", data)}\n        libraryPages={hotspotData.media_pages}\n      />\n\n      <MenuField \n        handleMenu={data => handleChange(\"main_pages\", data)}\n        menuItems={hotspotData.main_pages}\n      />\n\n      </form>\n    </div>\n  );\n}\n\nexport default CreateLocation;","import React, { useState } from 'react';\nimport './App.css';\nimport Home from \"./pages/home/Home\";\nimport CreateProject from \"./pages/CreateProject/CreateProject\";\nimport UpdateProject from \"./pages/UpdateProject/UpdateProject\";\nimport FAQ from \"./pages/FAQ/FAQ.js\";\nimport CreateLocation from \"./pages/CreateLocation/CreateLocation\"\nimport { Switch, Route, NavLink } from 'react-router-dom';\n\nexport const Context = React.createContext();\n\nconst Provider = ({ children }) => {\n\n  const [Answers, setAnswers] = useState({\n    project_name: \"\",\n    intro_audio: \"\",\n    homepage_image: \"\",\n    hotspots: [],\n  });\n\n  const changeAnswer = (propertytName, value) => {\n    setAnswers({ ...Answers, ...{ [propertytName]: value } });\n  }\n\n  return (\n    <Context.Provider value={{\n      Answers,\n      changeAnswer: (propName, val) => changeAnswer(propName, val),\n      setAnswers: answers => setAnswers(answers)\n    }}\n    >\n      {children}\n    </Context.Provider>\n  );\n}\n\n\nfunction App() {\n  return (\n    <Provider>\n      <div className=\"app\">\n        <nav className={\"top-nav\"}>\n          \n          <div className=\"pure-menu pure-menu-horizontal\">\n            <ul className=\"pure-menu-list\">\n              <li className=\"pure-menu-item\">\n                <NavLink className=\"pure-menu-link\" to='/'>Home</NavLink>\n              </li>\n\n              <li className=\"pure-menu-item pure-menu-has-children pure-menu-allow-hover\">\n                <NavLink className=\"pure-menu-link\" to='/project'>New Project</NavLink>\n                <ul className=\"pure-menu-children\">\n                  <li className=\"pure-menu-item\">\n                    <NavLink className=\"pure-menu-link\" to='/project'>Configuration Editor</NavLink>\n                  </li>\n                  <li className=\"pure-menu-item\">\n                    <NavLink className=\"pure-menu-link\" to='/'>Expert Configuration</NavLink>\n                  </li>\n                </ul>\n              </li>\n\n              <li className=\"pure-menu-item pure-menu-has-children pure-menu-allow-hover\">\n                <NavLink className=\"pure-menu-link\" to='/update'>Edit Project</NavLink>\n                <ul className=\"pure-menu-children\">\n                  <li className=\"pure-menu-item\">\n                    <NavLink className=\"pure-menu-link\" to='/update'>Project Name</NavLink>\n                  </li>\n                  <li className=\"pure-menu-item\">\n                    <NavLink className=\"pure-menu-link\" to='/'>Poems</NavLink>\n                  </li>\n                </ul>\n              </li>\n\n              <li className=\"pure-menu-item\">\n                <NavLink className=\"pure-menu-link\" to='/faq'>FAQ</NavLink>\n              </li>\n            </ul>\n          </div>\n\n        </nav>\n        <main className={\"content-container\"}>\n          <section className={\"content-section\"}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/project\" component={CreateProject} />\n              <Route path=\"/hotspot/:id\" component={CreateLocation} />\n              <Route exact path=\"/update\" component={UpdateProject} />\n              <Route exact path=\"/faq\" component={FAQ} />\n            </Switch>\n          </section>\n          <aside className={\"project-side\"}>\n            <h2>New Project</h2>\n            <nav className={\"side-nav\"}>\n              <ul>\n                <li><NavLink to='/project'>Homepage Content</NavLink></li>\n                <li><NavLink to='/menu'>Menu Content</NavLink></li>\n              </ul>\n            </nav>\n            <h3>Hotspots</h3>\n            <nav className={\"hotspot-nav\"}>\n              <Context.Consumer>\n                {({ Answers }) => (\n                  <ul className=\"hotspot-items\">{Answers.hotspots.map((location, index) => {\n                    return (\n                      <li key={index}><NavLink to={`/hotspot/${index}`}>{location.name}</NavLink></li>\n                    )\n\n                  })}</ul>\n                )}\n              </Context.Consumer>\n              <ul>\n                <li className=\"add-hotspot\">\n                  <NavLink to='/hotspot/new'>Add a Hotspot</NavLink>\n                </li>\n              </ul>\n            </nav>\n          </aside>\n        </main>\n        <footer>\n          <ul>\n            <li> FAQ | 2017 &copy; Kent State University | Privacy & Terms of Use </li>\n            <li><img alt=\"NEH Logo\" id=\"logo\" src=\"./images/NEH_logo.png\" /></li>\n            <li><img alt=\"KSU Logo\" id=\"logo\" src=\"./images/Kent State Logo.png\" /></li>\n\n          </ul>\n        </footer>\n      </div>\n    </Provider>\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n<BrowserRouter>\n  <App />\n</BrowserRouter>\n), document.getElementById('root'));\n"],"sourceRoot":""}