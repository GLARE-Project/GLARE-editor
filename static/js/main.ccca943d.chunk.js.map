{"version":3,"sources":["pages/home/Home.js","utils/utils.js","pages/CreateProject/AlertTooClose.js","pages/CreateProject/CreateProject.js","pages/UpdateProject/UpdateProject.js","pages/FAQ/FAQ.js","pages/CreateLocation/Map/MapField.js","pages/CreateLocation/Library/LibraryField.js","pages/CreateLocation/Menu/MenuField.js","pages/CreateLocation/CreateLocation.js","utils/Graph.js","App.js","index.js"],"names":["Home","className","src","process","alt","createFileList","fileName","fileListObj","DataTransfer","items","add","File","files","styles","toastCtn","display","alignItems","fontWeight","toastBtn","backgroundColor","padding","border","AlertTooClose","hotspots","parentIndex","tooCloseIndices","hotspotGraph","changeAnswer","hotSpotNames","map","closeHotspotIndex","name","style","reduce","accumulator","hotspotName","currentIndex","length","onClick","old","forEach","isSubHotspot","removeVertex","position","CreateProject","useContext","Context","Answers","checkValidity","useState","project_name","localAnswers","setLocalAnswers","downloadURL","setURL","promptMerge","useCallback","props","toast","type","TYPE","WARNING","autoClose","draggablePercent","checkHotspotProximity","dismiss","itemsLeft","Map","adjancyList","tooClose","adjancyValue","neighbors","neighbor","index","get","previousValue","set","delete","generateURL","then","ValidityState","jsonData","JSON","stringify","blob","Blob","URL","createObjectURL","ERROR","useEffect","document","querySelector","intro_audio","homepage_image","handleChange","propertytName","value","htmlFor","id","placeholder","onChange","e","target","accept","href","download","UpdateProject","history","setAnswers","reader","FileReader","readAsText","onload","parse","result","push","pathname","FAQ","MapField","handleLocation","currentLatitude","currentLongitude","mapRef","useRef","setPosition","zoom","setZoom","zoomLocation","latlong","current","leafletElement","flyTo","animate","L","require","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","lat","lng","Fragment","height","margin","center","latlng","ref","minZoom","TileLayer","attribution","url","Marker","Popup","LibraryField","handleLibrary","libraryPages","contentTypes","selectedContent","setContent","pictures","SetPictures","audio","SetAudio","links","SetLinks","picturesMedia","destructorObject","filter","title","pop","pictureObj","item","audioMedia","linksMedia","handlePicture","item_description","customBuildObj","contentName","handleAudio","handleSaveAll","handleLink","buildObject","mediaObj","hasOwnProperty","content_items","media","key","content","parseInt","picture","audioObj","link","MenuField","handleMenu","menuItems","menu","setMenu","menuObj","background_image","descriptive_audio","handleMenuSave","description","CreateLocation","useParams","INITIAL_STATE","latitude","longitude","overlay","panorama_image","overlay_size","overlay_offset_x","overlay_offset_y","start_audio","main_pages","media_pages","hotspotData","setHotspotData","hasChanged","setHasChanged","handleProjectSave","updatedAnswer","replace","has","addVertex","objectName","newAnswer","min","max","data","Vertex","this","long","lat1","lon1","lat2","lon2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","distance","Graph","adjancyKey","isTooClose","addEdge","v","indexOf","splice","w","React","createContext","Provider","children","useHistory","libraryItemSchema","array","of","object","shape","string","required","librarySchema","content_type","number","menuSchema","hotspotSchema","mixed","schema","a","isValid","directlyChangeAnswers","answers","hotspot","_","hotspotIndex","generateGraph","loadExample","fetch","res","json","propName","val","App","to","Consumer","tabIndex","exact","path","component","location","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.ccca943d.chunk.js","sourcesContent":["import React from 'react';\nimport './home.css';\nfunction Home() {\n\n    return (\n        <div className=\"homepage\">\n            <img src={`${process.env.PUBLIC_URL}/images/ConfigPhone.png`} alt=\"logo\" />\n            <div className={\"side-text\"}>\n                <h1>GLARE</h1>\n                <h2>Configuration Editor</h2>\n                <h5> Welcome to the GLARE Configuration Editor! Glare is an Augumented Reality Editor enabling the development of individual experiences regarding humanties and beyond.</h5>\n            </div>\n        </div>\n    )\n};\nexport default Home;","  \n  // create the file list, so the fileName can be set\n  // this is to be used to set the file input types\n  // ex: input.files = new createFileList('image.png')\nconst createFileList = (fileName) => {\n    let fileListObj = new DataTransfer();\n    // if the fileName passed add that file\n    if (fileName) fileListObj.items.add(new File([''], fileName))\n    return fileListObj.files\n  };\n\nexport default createFileList;","import React from 'react';\n\n\n// Note: both the props hotspotGraph and changeAnswer have to be drilled down\n// as react-tostify seems to cause Context API collisions\nconst AlertTooClose = ({ hotspots, parentIndex, tooCloseIndices, hotspotGraph, changeAnswer }) => {\n    const hotSpotNames = tooCloseIndices.map(closeHotspotIndex => { return hotspots[closeHotspotIndex].name });\n    return (\n        <div>\n            <p style={styles.toastCtn}>Appears that {hotspots[parentIndex].name} is too close to\n                {\" \" + hotSpotNames.reduce( (accumulator, hotspotName, currentIndex) => {\n                return accumulator + (currentIndex - 1 === hotSpotNames.length ? ', ' : ' and ') + hotspotName;\n            })}. Would you like to combine them?\n                <button style={styles.toastBtn} onClick={() => {\n                    let old = hotspots;\n                    tooCloseIndices.forEach(closeHotspotIndex => {\n                        old[closeHotspotIndex].isSubHotspot = true;\n                        hotspotGraph.removeVertex(old[closeHotspotIndex].position);\n                    });\n                    changeAnswer(\"hotspots\", old);\n                }}>Yes</button>\n            </p>\n        </div>\n    );\n}\n\nconst styles = {\n    toastCtn: {\n        display: \"flex\",\n        alignItems: \"center\",\n\t\tfontWeight: \"bold\"\n\t},\n\ttoastBtn: {\n\t\tbackgroundColor: \"white\",\n        fontWeight: \"bold\",\n        padding: \".75em\",\n        border: \"none\"\n\t}\n}\n\nexport default AlertTooClose;","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { toast } from \"react-toastify\";\nimport \"./CreateProject.scss\"\nimport { Context } from \"./../../App\"\nimport createFileList from \"./../../utils/utils\";\nimport AlertTooClose from \"./AlertTooClose\";\n\nconst CreateProject = () => {\n\n    const { Answers, changeAnswer, checkValidity, hotspotGraph } = useContext(Context);\n\n    const [localAnswers, setLocalAnswers] = useState({ project_name: \"\" });\n\n    const [downloadURL, setURL] = useState(null);\n\n    const promptMerge = useCallback((props) => {\n        toast(<AlertTooClose {...props} hotspotGraph={hotspotGraph} changeAnswer={changeAnswer} />, {\n            type: toast.TYPE.WARNING,\n            autoClose: false,\n            draggablePercent: 50\n        });\n    }, [changeAnswer, hotspotGraph]);\n\n    const checkHotspotProximity = useCallback(({ hotspots }) => {\n\n        toast.dismiss();\n\n        if (hotspots.length > 0) {\n\n            const itemsLeft = new Map(hotspotGraph.adjancyList);\n            const tooClose = new Map();\n\n\n            // TODO: tooClose should be take into account prioritize the itemsLeft's parent with the highest neighbors\n            // The current method is delete the first, but the most neighbors would be the most efficent\n            itemsLeft.forEach(adjancyValue => {\n                // if there is too close neighbors\n                if (adjancyValue.neighbors.length > 0) {\n                    // then the vertex is too close to other vertices\n                    adjancyValue.neighbors.forEach(neighbor => {\n                        const { index } = itemsLeft.get(neighbor);\n                        // add the new item to the exisiting map of too close item\n                        const previousValue = tooClose.get(adjancyValue.index) || [];\n                        tooClose.set(adjancyValue.index, [...previousValue, index]);\n                        // remove this vertex from being checked again\n                        itemsLeft.delete(neighbor)\n                    });\n                }\n            });\n\n            tooClose.forEach((tooCloseIndices, parentIndex) => {\n                promptMerge({hotspots, parentIndex, tooCloseIndices});\n            });\n\n        }\n\n    }, [hotspotGraph, promptMerge]);\n\n    // generate the download URL\n    const generateURL = useCallback(() => {\n        // if the data is valid we'll generate the blob\n        checkValidity().then(ValidityState => {\n            if (ValidityState === true) {\n                // check for the points too close for GPS and alert the user\n                checkHotspotProximity(Answers);\n                const jsonData = JSON.stringify(Answers);\n                // turn it into a blob object\n                const blob = new Blob([jsonData], { type: \"application/json\" })\n                // create blob url for the browser to download\n                setURL(URL.createObjectURL(blob));\n                // only alert if the project name is set and has a hotspot\n            } else if (Answers.project_name !== \"\" && Answers.hotspots.length > 0) {\n                toast('Not all the required data has been populated! Please check each hotspot to verify the required fields have been filled in.', {\n                    type: toast.TYPE.ERROR,\n                    draggablePercent: 50\n                });\n            }\n        });\n    }, [Answers, checkValidity, checkHotspotProximity]);\n\n    // on load, if the id exists, load its data\n    useEffect(() => {\n        setLocalAnswers(Answers);\n        // improper way of doing it, but can't seem to set files attribute properly\n        document.querySelector(\"#intro-audio\").files = createFileList(Answers.intro_audio);\n        document.querySelector(\"#homepage-img\").files = createFileList(Answers.homepage_image);\n        generateURL()\n    }, [Answers, generateURL])\n\n    // if a value is changed it must:\n    const handleChange = (propertytName, value) => {\n        // set the new answer value\n        changeAnswer(propertytName, value);\n        setLocalAnswers(Answers);\n        // regenerate the URL\n        generateURL();\n    };\n\n    return (\n        <div className=\"CreateProject\">\n            <div className=\"pure-form pure-form-aligned\">\n                <h1>New Project</h1>\n                <h2>Homepage Content</h2>\n                <div className=\"pure-control-group required\">\n                    <label htmlFor=\"project-name\">Project Name</label>\n                    <input\n                        type=\"text\" id=\"project-name\" placeholder=\"enter project name\"\n                        value={localAnswers.project_name}\n                        onChange={e => handleChange(\"project_name\", e.target.value)}\n                    />\n                </div>\n\n                <div className=\"pure-control-group\">\n                    <label htmlFor=\"intro-audio\">Introduction Audio</label>\n                    <input\n                        type=\"file\" id=\"intro-audio\" accept=\"audio/*\"\n                        onChange={e => handleChange(\"intro_audio\", e.target.files[0]['name'])}\n                    />\n                </div>\n\n                <div className=\"pure-control-group\">\n                    <label htmlFor=\"homepage-img\">Homepage Image</label>\n                    <input\n                        type=\"file\" id=\"homepage-img\" accept=\"image/*\" name=\"file.jpg\"\n                        onChange={e => handleChange(\"homepage_image\", e.target.files[0]['name'])}\n                    />\n                </div>\n\n                <br />\n                {downloadURL && (<>\n                    <a className=\"pure-button download-btn\" href={downloadURL} download=\"markers.json\">Download Configuration File</a>\n                    <a className=\"pure-button download-btn\" href={`${process.env.PUBLIC_URL}/server-files.zip`} download=\"server-files.zip\">Download Server Files</a>\n                </>)}\n            </div>\n        </div>\n    )\n};\n\n\n\nexport default CreateProject;","import React, { useContext } from 'react';\nimport './UpdateProject.css';\nimport { Context } from \"../../App\"\n\nconst UpdateProject = ({ history }) => {\n    const { setAnswers } = useContext(Context);\n\n    const handleChosenFile = (e) => {\n        let files = e.target.files;\n        let reader = new FileReader();\n        reader.readAsText(files[0]);\n        reader.onload = () => {\n            setAnswers(JSON.parse(reader.result));\n            history.push({\n                pathname: '/project'\n            })\n        }\n    }\n    return (\n        <div>\n            <div >\n                <h1>Project</h1>\n                <h2>Configuration Editor</h2>\n                <input type='file' id='file' className='input-file'\n                    accept='.json' onChange={handleChosenFile} />\n            </div>\n        </div>\n    )\n}\nexport default UpdateProject;","import React from 'react';\nimport './FAQ.scss';\nfunction FAQ() {\n\nreturn (\n            <div className=\"FAQ-ctn\">\n                    <h1><b>FAQ</b></h1>\n                    <h3>Subject 1</h3>\n                    <div>\n                    <dl>\n                        <dt><b>FAQ 1</b></dt>\n                        <dd><small>Answer to FAQ 1</small></dd>\n                        <hr/>\n                        <dt><b>FAQ 2</b></dt>\n                        <dd><small>Answer to FAQ 2</small></dd>\n                        <hr/>\n                        <dt><b>FAQ 3</b></dt>\n                        <dd><small>Answer to FAQ 3</small></dd>\n                        <hr/>\n                    </dl>\n                    </div>\n            </div>\n            )\n};\nexport default FAQ;","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst MapField = ({ handleLocation, currentLatitude, currentLongitude }) => {\n\n  const mapRef = useRef(null);\n  \n  const [position, setPosition] = useState([currentLatitude, currentLongitude]);\n  const [zoom, setZoom] = useState(2);\n\n     const zoomLocation = useCallback((latlong) => {\n    mapRef.current.leafletElement.flyTo(latlong, zoom, {animate: true});\n  }, [zoom]);\n\n  useEffect(() => {\n    const L = require(\"leaflet\");\n\n    delete L.Icon.Default.prototype._getIconUrl;\n\n    L.Icon.Default.mergeOptions({\n      iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n      iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n      shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n    });\n    \n    setPosition([currentLatitude, currentLongitude]);\n    zoomLocation({lat: currentLatitude, lng: currentLongitude});\n\n  }, [currentLatitude, currentLongitude, zoomLocation]);\n\n  const changeLocation = (e) => {\n    const {lat, lng} = e.latlng;\n    setZoom(10);\n    handleLocation(lat, lng);\n  }\n\n  return (\n    <React.Fragment>\n      <LeafletMap \n        style={{height: '20em', margin: '1em 0'}}\n        center={position} zoom={zoom}\n        onClick={changeLocation}\n        ref={mapRef}\n        minZoom={2}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n        />\n        {position[0] !== 0 && position[1] !== 0 &&\n        <Marker position={position}>\n          <Popup>\n            <span>selected location</span>\n          </Popup>\n        </Marker>\n        }\n      </LeafletMap>\n    </React.Fragment>\n  )\n};\n\nexport default MapField;","import React, { useState, useEffect } from 'react';\nimport createFileList from \"../../../utils/utils\";\n\n// TODO: clean up saving system\n// remove any place where we SetPictures due to dependency exhaust - but it's ugly\nconst LibraryField = ({ handleLibrary, libraryPages }) => {\n\n    const contentTypes = [\"Pictures\", \"Audio\", \"Links\"];\n\n    const [selectedContent, setContent] = useState(0);\n\n    const [pictures, SetPictures] = useState([]);\n    const [audio, SetAudio] = useState([]);\n    const [links, SetLinks] = useState([]);\n\n\n    useEffect(() => {\n        // if data exists then properly set it up\n        if (libraryPages) {\n            const picturesMedia = destructorObject(libraryPages.filter(({title}) => title === \"Pictures\").pop());\n            // cheap way of checking if two arrays are different - to prevent dependency exhaust\n            if (JSON.stringify(pictures) === JSON.stringify(picturesMedia))\n                pictures.forEach((pictureObj, index) => {\n                    document.querySelector(`#content-image-${index}`).files = createFileList(pictureObj.item);\n                });\n            else SetPictures(picturesMedia)\n\n            const audioMedia = destructorObject(libraryPages.filter(({title}) => title === \"Audio\").pop());\n            SetAudio(audioMedia);\n\n            const linksMedia = destructorObject(libraryPages.filter(({title}) => title === \"Links\").pop());\n            SetLinks(linksMedia);\n        }\n    }, [libraryPages, pictures]); // picture isn't added to dependency since adding a new item will result cause a reload\n\n\n    const handleSelect = (e) => {\n        setContent(e.target.value);\n    };\n\n    const handlePicture = (index, type, e) => {\n        let old = pictures;\n\n        if (type === \"image\") {\n            old[index].item = e.target.files[0]['name'];\n        } else {\n            old[index].item_description = e.target.value;\n        }\n\n        // building using the new data\n        const customBuildObj = contentTypes.map((contentName, index) => {\n            const items = index === 1 ? audio : (index === 2 ? links : old);\n            return (\n                {\n                    \"title\": contentName,\n                    \"content_type\": index,\n                    \"content_items\": items\n                }\n            )\n        });\n\n        handleLibrary(customBuildObj);\n    };\n\n    const handleAudio = (index, type, e) => {\n        let old = audio;\n\n        if (type === \"audio\") {\n            old[index].item = e.target.value;\n        } else {\n            old[index].item_description = e.target.value;\n        }\n\n        SetAudio(old);\n\n        handleSaveAll();\n    };\n\n    const handleLink = (index, type, e) => {\n        let old = links;\n\n        if (type === \"link\") {\n            old[index].item = e.target.value;\n        } else {\n            old[index].item_description = e.target.value;\n        }\n\n        SetLinks(old);\n\n        handleSaveAll();\n    };\n\n    // build the predefined structure to prepare it for saving\n    const buildObject = contentTypes.map((contentName, index) => {\n        const items = index === 1 ? audio : (index === 2 ? links : pictures);\n        return (\n            {\n                \"title\": contentName,\n                \"content_type\": index,\n                \"content_items\": items\n            }\n        )\n    });\n\n    const destructorObject = mediaObj => {\n        if (mediaObj && mediaObj.hasOwnProperty(\"content_items\"))\n            return mediaObj.content_items.map(media => {\n                return {\n                    item: media.item,\n                    item_description: media.item_description\n                }\n            })\n        else return []\n    };\n\n\n    // save all the data as a predefined structure\n    const handleSaveAll = () => {\n        handleLibrary(buildObject);\n    };\n\n    const createContent = () => {\n\n        const content = {\n            \"item\": \"\",\n            \"item_description\": \"\"\n        };\n\n        const customBuildObj = contentTypes.map((contentName, index) => {\n            let items = index === 1 ? audio : (index === 2 ? links : pictures);\n            // we add the new object to the selected item\n            if (parseInt(selectedContent) === index) items = [...items, content]\n            return (\n                {\n                    \"title\": contentName,\n                    \"content_type\": index,\n                    \"content_items\": items\n                }\n            )\n        });\n\n        handleLibrary(customBuildObj);\n\n    };\n\n    return (\n        <React.Fragment>\n            <div className=\"pure-control-group\">\n                <label htmlFor=\"content-type\">Content Type</label>\n                <select name=\"content\" id=\"content-type\" onChange={handleSelect} value={selectedContent}>\n                    {contentTypes.map((contentName, index) => {\n                        return (<option key={index} value={index}>{contentName}</option>)\n                    })}\n                </select>\n            </div>\n            <div className=\"pure-controls\">\n                <button type=\"button\" className=\"pure-button\" onClick={createContent}>Create Content</button>\n            </div>\n\n\n            {pictures.length > 0 && <legend>Pictures</legend>}\n            {pictures.map((picture, index) => {\n                return (\n                    <React.Fragment key={index}>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`content-image-${index}`}>Image file</label>\n                            <input\n                                type=\"file\" id={`content-image-${index}`} placeholder=\"select image\" accept=\"image/*\"\n                                onChange={e => handlePicture(index, \"image\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`picture-descript-${index}`}>Picture Caption</label>\n                            <input\n                                type=\"text\" id={`picture-descript-${index}`} placeholder=\"enter caption\"\n                                value={picture.item_description}\n                                onChange={e => handlePicture(index, \"description\", e)}\n                            />\n\n                        </div>\n                    </React.Fragment>\n                )\n            })}\n\n            {audio.length > 0 && <legend>Audio</legend>}\n            {audio.map((audioObj, index) => {\n                return (\n                    <React.Fragment key={index}>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`content-audio-${index}`}>Audio Link</label>\n                            <input\n                                type=\"text\" id={`content-audio-${index}`} placeholder=\"Audio Link\"\n                                value={audioObj.item}\n                                onChange={e => handleAudio(index, \"audio\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`audio-descript-${index}`}>Audio Description</label>\n                            <input\n                                type=\"text\" id={`audio-descript-${index}`} placeholder=\"enter description\"\n                                value={audioObj.item_description}\n                                onChange={e => handleAudio(index, \"description\", e)}\n                            />\n                        </div>\n\n                    </React.Fragment>\n                )\n            })}\n\n            {links.length > 0 && <legend>Links</legend>}\n            {links.map((link, index) => {\n                return (\n                    <React.Fragment key={index}>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`content-link-${index}`}>Link URL</label>\n                            <input\n                                type=\"text\" id={`content-link-${index}`} placeholder=\"enter link\"\n                                value={link.item}\n                                onChange={e => handleLink(index, \"link\", e)}\n                            />\n                        </div>\n\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`link-descript-${index}`}>Content Description</label>\n                            <input\n                                type=\"text\" id={`link-descript-${index}`} placeholder=\"enter description\"\n                                value={link.item_description}\n                                onChange={e => handleLink(index, \"description\", e)}\n                            />\n                        </div>\n\n                    </React.Fragment>\n                )\n            })}\n\n        </React.Fragment>\n    )\n\n}\n\nexport default LibraryField;\n\n\n","import React, { useState, useEffect } from 'react';\nimport createFileList from \"../../../utils/utils\";\n\nconst MenuField = ({ handleMenu, menuItems }) => {\n\n    const [menu, setMenu] = useState([]);\n\n    useEffect(() => {\n        // if data exists then properly set it up\n        if (menuItems) {\n            if (JSON.stringify(menu) === JSON.stringify(menuItems))\n                menuItems.forEach((menuObj, index) => {\n                    document.querySelector(`#menu-bg-image-${index}`).files = createFileList(menuObj.background_image);\n                    document.querySelector(`#menu-audio-${index}`).files = createFileList(menuObj.descriptive_audio);\n                });\n            else setMenu(menuItems)\n        }\n    }, [menuItems, menu]);\n\n    // add the inital link object to the queue\n    const createLink = () => {\n        const content = {\n            \"title\": \"\",\n            \"description\": \"\",\n            \"background_image\": \"\",\n            \"descriptive_audio\": \"\"\n\n        };\n        handleMenu([...menu, content]);\n    };\n\n    // any changes that is made to the input, we should update the state and global values\n    const handleMenuSave = (index, type, e) => {\n        let old = menu;\n\n        const value = (type === \"title\" || type === \"description\") ? e.target.value : e.target.files[0]['name'];\n        old[index] = { ...old[index], ...{ [type]: value } };\n      \n        handleMenu(old);\n    };\n\n    return (\n        <>\n            <div className=\"pure-controls\">\n                <button type=\"button\" className=\"pure-button\" onClick={createLink}>Create Link</button>\n            </div>\n\n            {menu.length > 0 && <legend>Menu Link</legend>}\n\n            {menu.map((menuObj, index) => {\n                return (\n                    <React.Fragment key={index}>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`menu-title-${index}`}>Menu Link Title</label>\n                            <input\n                                type=\"text\" id={`menu-title-${index}`} placeholder=\"enter title\"\n                                value={menuObj.title}\n                                onChange={e => handleMenuSave(index, \"title\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`menu-descript-${index}`}>Menu Link Description</label>\n                            <input\n                                type=\"text\" id={`menu-descript-${index}`} placeholder=\"enter description\"\n                                value={menuObj.description}\n                                onChange={e => handleMenuSave(index, \"description\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`menu-bg-image-${index}`}>Background Image</label>\n                            <input\n                                type=\"file\" id={`menu-bg-image-${index}`} placeholder=\"select image\" accept=\"image/*\"\n                                onChange={e => handleMenuSave(index, \"background_image\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`menu-audio-${index}`}>Descriptive Audio</label>\n                            <input\n                                type=\"file\" id={`menu-audio-${index}`} placeholder=\"select audio\" accept=\"audio/*\"\n                                onChange={e => handleMenuSave(index, \"descriptive_audio\", e)}\n                            />\n                        </div>\n                    </React.Fragment>\n                )\n            })}\n        </>\n    );\n}\n\nexport default  MenuField;","import React, { useState, useContext, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport MapField from \"./Map/MapField\";\nimport LibraryField from \"./Library/LibraryField\";\nimport MenuField from \"./Menu/MenuField\";\nimport { Context } from \"./../../App\";\nimport createFileList from \"./../../utils/utils\";\nimport './CreateLocation.css';\n\n\nfunction CreateLocation( { history } ) {\n\n  const { Answers, changeAnswer, hotspotGraph } = useContext(Context);\n\n  const { hotspots } = Answers;\n\n  const { id } = useParams();\n\n  const INITIAL_STATE = {\n    // location related\n    name: \"\",\n    position: null,\n    latitude: 0,\n    longitude: 0,\n    overlay: \"\",\n    isSubHotspot: false,\n    // VR related\n    panorama_image: \"\",\n    overlay_size: 10,\n    overlay_offset_x: 0,\n    overlay_offset_y: 0,\n    // audio related\n    start_audio: \"\",\n    // the links\n    main_pages: [],\n    // the library\n    media_pages: []\n  };\n  const [hotspotData, setHotspotData] = useState(INITIAL_STATE);\n  const [hasChanged, setHasChanged] = useState(false);\n\n  // on load, if the id exists, load its data\n  useEffect(() => {\n    \n    // load the hotspot at the id's postiion if it exists\n    if (id !== \"new\" && hotspots.length > parseInt(id)) {\n      const hotspotData = hotspots[parseInt(id)];\n      setHotspotData(hotspotData);\n      // improper way of doing it, but can't seem to set files attribute properly\n      document.querySelector(\"#panorama-img\").files = createFileList(hotspotData.panorama_image);\n      document.querySelector(\"#overlay\").files = createFileList(hotspotData.overlay);\n      document.querySelector(\"#narration-audio\").files = createFileList(hotspotData.start_audio);\n      setHasChanged(true);\n    } else if ( id === \"new\" && hasChanged) {\n      setHotspotData(INITIAL_STATE);\n      document.querySelector(\"#panorama-img\").files = createFileList([]);\n      document.querySelector(\"#overlay\").files = createFileList([]);\n      document.querySelector(\"#narration-audio\").files = createFileList([]);\n      setHasChanged(false);\n\n    }\n  }, [hotspots, id, INITIAL_STATE, hasChanged]);\n\n  const handleProjectSave = updatedAnswer => {\n    // we add the new item to the array and set it's position\n    if (id === \"new\") {\n      const position = hotspots.length;\n      changeAnswer(\"hotspots\", [...hotspots, { ...updatedAnswer , position } ]);\n      history.replace(\"/hotspot/\" + position);\n    // we only need to update the existing data\n    } else {\n      let old = hotspots;\n      old[parseInt(id)] = updatedAnswer;\n      changeAnswer(\"hotspots\", old);\n      // if a valid id and hasn't been added to the graph adjancy list with valid coordinates\n      // then add it as a vertex (could warn the users here too)\n      if (!hotspotGraph.adjancyList.has(id) && old.latitude !== 0 && old.longitude !== 0) \n        hotspotGraph.addVertex(old, parseInt(id));\n    }\n  };\n\n  // if a value is changed it must:\n  const handleChange = (objectName, value) => {\n    // set the new answer value\n    const newAnswer = { ...hotspotData, ...{ [objectName]: value } };\n    handleProjectSave(newAnswer)\n  };\n\n  const handleLocation = (lat, lng) => {\n    const newAnswer = {\n      ...hotspotData,\n      latitude: lat,\n      longitude: lng\n    };\n    handleProjectSave(newAnswer);\n  }\n\n  return (\n    <div className=\"newConfigMain\">\n      <div className=\"pure-form pure-form-aligned\">\n       <div className=\"pure-control-group required\">\n        <label htmlFor=\"hotspot-name\">Hotspot name</label>\n        <input\n          type=\"text\" id=\"hotspot-name\" placeholder=\"enter name\"\n          value={hotspotData.name}\n          onChange={e => handleChange(\"name\", e.target.value)}\n        />\n      </div>\n\n      <MapField\n        handleLocation={handleLocation}\n        currentLatitude={hotspotData.latitude}\n        currentLongitude={hotspotData.longitude}\n      />\n\n      <div className=\"pure-control-group required\">\n        <label htmlFor=\"latitude\">Latitude</label>\n        <input\n          type=\"number\" id=\"latitude\" placeholder=\"enter latitude\" min={-90} max={90}\n          value={hotspotData.latitude != null ? hotspotData.latitude : \"\"}\n          onChange={e => handleChange(\"latitude\", e.target.value)}\n        />\n      </div>\n\n      <div className=\"pure-control-group required\">\n        <label htmlFor=\"longitude\">Longitude</label>\n        <input\n          type=\"number\" id=\"longitude\" placeholder=\"enter longitude\" min={-180} max={80}\n          value={hotspotData.longitude != null ? hotspotData.longitude : \"\"}\n          onChange={e => handleChange(\"longitude\", e.target.value)}\n        />\n      </div>\n\n\n      <div className=\"pure-control-group\">\n        <label htmlFor=\"overlay\">Overlay image</label>\n        <input\n          type=\"file\" id=\"overlay\" placeholder=\"select image\" accept=\"image/*\"\n          onChange={e => handleChange(\"overlay\", e.target.files[0]['name'])}\n        />\n        \n      </div>\n\n\n      <div className=\"pure-control-group\">\n        <label htmlFor=\"panorama-img\">Panorama image</label>\n        <input\n          type=\"file\" id=\"panorama-img\" placeholder=\"select image\" accept=\"image/*\"\n          onChange={e => handleChange(\"panorama_image\", e.target.files[0]['name'])}\n        />\n        \n      </div>\n        \n      <div className=\"pure-control-group\">\n        <label htmlFor=\"narration-audio\">Narration Audio</label>\n        <input\n          type=\"file\" id=\"narration-audio\" placeholder=\"select audio\" accept=\"audio/*\"\n          onChange={e => handleChange(\"start_audio\", e.target.files[0]['name'])}\n        />\n        \n      </div>\n\n      <LibraryField \n        handleLibrary={data => handleChange(\"media_pages\", data)}\n        libraryPages={hotspotData.media_pages}\n      />\n\n      <MenuField \n        handleMenu={data => handleChange(\"main_pages\", data)}\n        menuItems={hotspotData.main_pages}\n      />\n\n      </div>\n    </div>\n  );\n}\n\nexport default CreateLocation;","const distance = (lat1, lon1, lat2, lon2) => {\n    if ((lat1 === lat2) && (lon1 === lon2)) {\n        return 0;\n    }\n    else {\n        var radlat1 = Math.PI * lat1 / 180;\n        var radlat2 = Math.PI * lat2 / 180;\n        var theta = lon1 - lon2;\n        var radtheta = Math.PI * theta / 180;\n        var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n        if (dist > 1) {\n            dist = 1;\n        }\n        dist = Math.acos(dist);\n        dist = dist * 180 / Math.PI;\n        dist = dist * 60 * 1.1515;\n        return dist;\n    }\n}\n\n\nclass Vertex {\n    \n    constructor(index) {\n        this.index = index;\n        this.neighbors = [];\n    }\n\n    isTooClose(hotspotData, lat, long) {\n        const HOTSPOT_RADIUS = 0.0076; // 0.0075 miles == 40 feet\n        const {latitude, longitude } = hotspotData[this.index];\n        return distance(latitude, longitude, lat, long) <= HOTSPOT_RADIUS;\n    }\n\n}\n\nclass Graph {\n    constructor() {\n        this.adjancyList = new Map();\n    }\n\n    // input: hotspot data and index pointing to the vertex's data\n    addVertex(hotspotData, index) {\n\n        // destruct the data for the vertex\n        const { latitude, longitude, position } = hotspotData[index];\n\n        // add the new vertex to the graph\n        this.adjancyList.set(position, new Vertex(index))\n\n        // see if any of the exists points are its neighbors\n        this.adjancyList.forEach(( adjancyValue, adjancyKey) => {\n            // if so, create a edge to these two vertices\n            if (adjancyValue.isTooClose(hotspotData, latitude, longitude) && adjancyKey !== position) {\n                this.addEdge(position, adjancyKey);\n            }\n            \n        });\n    }\n\n    removeVertex(v) {\n        // remove all the references of vertex v from neighbors\n        this.adjancyList.get(v).neighbors.forEach(neighbor => {\n            const index = this.adjancyList.get(neighbor).neighbors.indexOf(v);\n            if (index !== -1) // make sure the neighbor exists\n                this.adjancyList.get(neighbor).neighbors.splice(index, 1);\n        });\n        // finally, remove the vertex from the adjancy list \n        this.adjancyList.delete(v);\n    }\n\n    addEdge(v, w) {\n        // since ithe graph is undirected we need to add the neighbor to both lists\n        this.adjancyList.get(v).neighbors.push( w );\n        this.adjancyList.get(w).neighbors.push( v );\n    }\n\n}\n\n\nexport default Graph;","import React, { useState } from 'react';\nimport './App.css';\nimport Home from \"./pages/home/Home\";\nimport CreateProject from \"./pages/CreateProject/CreateProject\";\nimport UpdateProject from \"./pages/UpdateProject/UpdateProject\";\nimport FAQ from \"./pages/FAQ/FAQ.js\";\nimport CreateLocation from \"./pages/CreateLocation/CreateLocation\"\nimport { Switch, Route, NavLink, useHistory } from 'react-router-dom';\nimport { string, object, number, array, mixed } from 'yup';\nimport Graph from \"./utils/Graph\";\n\nexport const Context = React.createContext();\n\nconst Provider = ({ children }) => {\n\n  const history = useHistory();\n\n  let libraryItemSchema = array().of(object().shape({\n    item: string().required(),\n    item_description: string().required()\n  }));\n\n  let librarySchema = array().of(object().shape({\n    title: string().required(),\n    content_type: number().required(),\n    content_items: libraryItemSchema.required()\n  }));\n\n  let menuSchema = array().of(object().shape({\n    title: string().required(),\n    description: string().required(),\n    background_image: string().required(),\n    descriptive_audio: string().required()\n  }));\n\n  let hotspotSchema = array().of(object().shape({\n    name: string().required(),\n    position: mixed(),\n    latitude: number().required().min(-90).max(90),\n    longitude: number().required().min(-180).max(80),\n    panorama_image: string(),\n    overlay: string(),\n    overlay_size: number().min(1).max(10),\n    overlay_offset_x: number().min(-9).max(9),\n    overlay_offset_y: number().min(-9).max(9),\n    start_audio: string(),\n    main_pages: menuSchema,\n    media_pages: librarySchema\n  }));\n\n  let schema = object().shape({\n    project_name: string().required(),\n    intro_audio: string(),\n    homepage_image: string(),\n    hotspots: hotspotSchema.required()\n  });\n\n  const [Answers, setAnswers] = useState({\n    project_name: \"\",\n    intro_audio: \"\",\n    homepage_image: \"\",\n    hotspots: [],\n  });\n\n  const [hotspotGraph] = useState(new Graph());\n\n  const changeAnswer = (propertytName, value) => {\n    setAnswers({ ...Answers, ...{ [propertytName]: value } });\n  }\n\n  const checkValidity = async () => {\n    return await schema.isValid(Answers);;\n  }\n\n  // generate the graph when the hotspots are loaded all at once\n  const generateGraph = ({ hotspots }) => {\n    hotspots.filter(hotspot => !hotspot.isSubHotspot).forEach((_, hotspotIndex) => {\n      hotspotGraph.addVertex(hotspots, hotspotIndex);\n    });\n  }\n\n  // since the function changes state directly\n  // we should change state and rebuilt the graph\n  const directlyChangeAnswers = (answers) => {\n    setAnswers(answers);\n    generateGraph(answers);\n  };\n\n  const loadExample = async () => {\n    await fetch(process.env.PUBLIC_URL + \"/markers.json\")\n      .then(res => res.json())\n      .then(res => {\n        if (res.hasOwnProperty(\"hotspots\")) {\n          directlyChangeAnswers(res);\n          history.push({\n            pathname: '/project'\n          })\n        }\n      });\n  }\n\n  return (\n    <Context.Provider value={{\n      Answers,\n      changeAnswer: (propName, val) => changeAnswer(propName, val),\n      setAnswers: answers => directlyChangeAnswers(answers),\n      checkValidity: () => checkValidity(),\n      loadExample: () => loadExample(),\n      hotspotGraph: hotspotGraph\n    }}\n    >\n      {children}\n    </Context.Provider>\n  );\n}\n\n\nconst App = () => {\n\n  return (\n    <Provider>\n      <div className=\"app\">\n        <nav className={\"top-nav\"}>\n\n          <div className=\"pure-menu pure-menu-horizontal\">\n            <ul className=\"pure-menu-list\">\n              <li className=\"pure-menu-item\">\n                <NavLink className=\"pure-menu-link\" to='/'>Home</NavLink>\n              </li>\n\n              <li className=\"pure-menu-item pure-menu-has-children pure-menu-allow-hover\">\n                <NavLink className=\"pure-menu-link\" to='/project'>New Project</NavLink>\n                <ul className=\"pure-menu-children\">\n                  <li className=\"pure-menu-item\">\n                    <NavLink className=\"pure-menu-link\" to='/project'>Configuration Editor</NavLink>\n                  </li>\n                  <Context.Consumer>\n                    {({ loadExample }) => {\n                      return (\n                        <li className=\"pure-menu-item\">\n                          <div tabIndex=\"0\" className=\"pure-menu-link\" onClick={loadExample}>Expert Configuration</div>\n                        </li>\n                      )\n                    }}\n                  </Context.Consumer>\n                </ul>\n              </li>\n\n              <li className=\"pure-menu-item pure-menu-has-children pure-menu-allow-hover\">\n                <NavLink className=\"pure-menu-link\" to='/update'>Edit Project</NavLink>\n                <ul className=\"pure-menu-children\">\n                  <li className=\"pure-menu-item\">\n                    <NavLink className=\"pure-menu-link\" to='/update'>Project Name</NavLink>\n                  </li>\n                </ul>\n              </li>\n\n              <li className=\"pure-menu-item\">\n                <NavLink className=\"pure-menu-link\" to='/faq'>FAQ</NavLink>\n              </li>\n            </ul>\n          </div>\n\n        </nav>\n        <main className={\"content-container\"}>\n          <section className={\"content-section\"}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/project\" component={CreateProject} />\n              <Route path=\"/hotspot/:id\" component={CreateLocation} />\n              <Route exact path=\"/update\" component={UpdateProject} />\n              <Route exact path=\"/faq\" component={FAQ} />\n            </Switch>\n          </section>\n          <aside className={\"project-side\"}>\n            <h2>New Project</h2>\n            <nav className={\"side-nav\"}>\n              <ul>\n                <li><NavLink to='/project'>Homepage Content</NavLink></li>\n              </ul>\n            </nav>\n            <h3>Hotspots</h3>\n            <nav className={\"hotspot-nav\"}>\n              <Context.Consumer>\n                {({ Answers }) => (\n                  <ul className=\"hotspot-items\">{Answers.hotspots.map((location, index) => {\n                    return (\n                      <li key={index}><NavLink to={`/hotspot/${index}`}>{location.name}</NavLink></li>\n                    )\n\n                  })}</ul>\n                )}\n              </Context.Consumer>\n              <ul>\n                <li className=\"add-hotspot\">\n                  <NavLink to='/hotspot/new'>Add a Hotspot</NavLink>\n                </li>\n              </ul>\n            </nav>\n          </aside>\n        </main>\n        <footer>\n          <ul>\n            <li> FAQ | 2017 &copy; Kent State University | Privacy & Terms of Use </li>\n            <li><img alt=\"NEH Logo\" id=\"logo\" src={`${process.env.PUBLIC_URL}/images/NEH_logo.png`} /></li>\n            <li><img alt=\"KSU Logo\" id=\"logo\" src={`${process.env.PUBLIC_URL}/images/Kent State Logo.png`} /></li>\n\n          </ul>\n        </footer>\n      </div>\n    </Provider>\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nReactDOM.render((\n<BrowserRouter basename=\"/GLARE-editor\">\n  <App />\n  <ToastContainer />\n</BrowserRouter>\n), document.getElementById('root'));\n"],"sourceRoot":""}