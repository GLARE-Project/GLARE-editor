{"version":3,"sources":["pages/home/Home.js","utils/utils.js","pages/CreateProject/CreateProject.js","pages/UpdateProject/UpdateProject.js","pages/FAQ/FAQ.js","pages/CreateLocation/Map/MapField.js","pages/CreateLocation/Library/LibraryField.js","pages/CreateLocation/Menu/MenuField.js","pages/CreateLocation/CreateLocation.js","App.js","index.js"],"names":["Home","className","src","process","alt","createFileList","fileName","fileListObj","DataTransfer","items","add","File","files","CreateProject","useContext","Context","Answers","changeAnswer","checkValidity","useState","project_name","localAnswers","setLocalAnswers","downloadURL","setURL","generateURL","useCallback","then","ValidityState","jsonData","JSON","stringify","blob","Blob","type","URL","createObjectURL","hotspots","length","toast","TYPE","ERROR","draggablePercent","useEffect","document","querySelector","intro_audio","homepage_image","handleChange","propertytName","value","htmlFor","id","placeholder","onChange","e","target","accept","name","href","download","UpdateProject","history","setAnswers","reader","FileReader","readAsText","onload","parse","result","push","pathname","FAQ","MapField","handleLocation","currentLatitude","currentLongitude","mapRef","useRef","position","setPosition","zoom","setZoom","zoomLocation","latlong","current","leafletElement","flyTo","animate","L","require","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","lat","lng","Fragment","style","height","margin","center","onClick","latlng","ref","minZoom","TileLayer","attribution","url","Marker","Popup","LibraryField","handleLibrary","libraryPages","contentTypes","selectedContent","setContent","pictures","SetPictures","audio","SetAudio","links","SetLinks","picturesMedia","destructorObject","filter","media","title","pop","forEach","pictureObj","index","item","audioMedia","linksMedia","handlePicture","old","item_description","customBuildObj","map","contentName","handleAudio","handleSaveAll","handleLink","buildObject","mediaObj","hasOwnProperty","content_items","key","content","parseInt","picture","audioObj","link","MenuField","handleMenu","menuItems","menu","setMenu","menuObj","background_image","descriptive_audio","handleMenuSave","description","CreateLocation","useParams","currentID","setCurrentID","INITIAL_STATE","latitude","longitude","AR_overlay","panorama_image","VR_overylay","overlay_size","overlay_offset_x","overlay_offset_y","start_audio","main_pages","media_pages","hotspotData","setHotspotData","handleProjectSave","updatedAnswer","replace","objectName","newAnswer","min","max","data","React","createContext","Provider","children","useHistory","libraryItemSchema","array","of","object","shape","string","required","librarySchema","content_type","number","menuSchema","hotspotSchema","mixed","schema","a","isValid","loadExample","fetch","res","json","propName","val","answers","App","to","Consumer","tabIndex","exact","path","component","location","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.f7e1c991.chunk.js","sourcesContent":["import React from 'react';\nimport './home.css';\nfunction Home() {\n\n    return (\n        <div className=\"homepage\">\n            <img src={`${process.env.PUBLIC_URL}/images/ConfigPhone.png`} alt=\"logo\" />\n            <div className={\"side-text\"}>\n                <h1>GLARE</h1>\n                <h2>Configuration Editor</h2>\n                <h5> Welcome to the GLARE Configuration Editor! Glare is an Augumented Reality Editor enabling the development of individual experiences regarding humanties and beyond.</h5>\n            </div>\n        </div>\n    )\n};\nexport default Home;","  \n  // create the file list, so the fileName can be set\n  // this is to be used to set the file input types\n  // ex: input.files = new createFileList('image.png')\nconst createFileList = (fileName) => {\n    let fileListObj = new DataTransfer();\n    // if the fileName passed add that file\n    if (fileName) fileListObj.items.add(new File([''], fileName))\n    return fileListObj.files\n  };\n\nexport default createFileList;","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { toast } from \"react-toastify\";\nimport \"./CreateProject.scss\"\nimport { Context } from \"./../../App\"\nimport createFileList from \"./../../utils/utils\";\n\nconst CreateProject = () => {\n\n    const { Answers, changeAnswer, checkValidity } = useContext(Context);\n\n    const [localAnswers, setLocalAnswers] = useState({ project_name: \"\" });\n\n    const [downloadURL, setURL] = useState(null);\n\n    // generate the download URL\n    const generateURL = useCallback(() => {\n        // if the data is valid we'll generate the blob\n        checkValidity().then(ValidityState => {\n            if (ValidityState === true) {\n                const jsonData = JSON.stringify(Answers);\n                // turn it into a blob object\n                const blob = new Blob([jsonData], { type: \"application/json\" })\n                // create blob url for the browser to download\n                setURL(URL.createObjectURL(blob));\n                // only alert if the project name is set and has a hotspot\n            } else if (Answers.project_name !== \"\" && Answers.hotspots.length > 0) {\n                toast('Not all the required data has been populated! Please check each hotspot to verify the required fields have been filled in.', {\n                    type: toast.TYPE.ERROR,\n                    draggablePercent: 50\n                });\n            }\n        });\n    }, [Answers, checkValidity]);\n\n    // on load, if the id exists, load its data\n    useEffect(() => {\n        setLocalAnswers(Answers);\n        // improper way of doing it, but can't seem to set files attribute properly\n        document.querySelector(\"#intro-audio\").files = createFileList(Answers.intro_audio);\n        document.querySelector(\"#homepage-img\").files = createFileList(Answers.homepage_image);\n        generateURL()\n    }, [Answers, generateURL])\n\n    // if a value is changed it must:\n    const handleChange = (propertytName, value) => {\n        // set the new answer value\n        changeAnswer(propertytName, value);\n        setLocalAnswers(Answers);\n        // regenerate the URL\n        generateURL();\n    };\n\n    return (\n        <div className=\"CreateProject\">\n            <div className=\"pure-form pure-form-aligned\">\n                <h1>New Project</h1>\n                <h2>Homepage Content</h2>\n                <div className=\"pure-control-group required\">\n                    <label htmlFor=\"project-name\">Project Name</label>\n                    <input\n                        type=\"text\" id=\"project-name\" placeholder=\"enter project name\"\n                        value={localAnswers.project_name}\n                        onChange={e => handleChange(\"project_name\", e.target.value)}\n                    />\n                </div>\n\n                <div className=\"pure-control-group\">\n                    <label htmlFor=\"intro-audio\">Introduction Audio</label>\n                    <input\n                        type=\"file\" id=\"intro-audio\" accept=\"audio/*\"\n                        onChange={e => handleChange(\"intro_audio\", e.target.files[0]['name'])}\n                    />\n                </div>\n\n                <div className=\"pure-control-group\">\n                    <label htmlFor=\"homepage-img\">Homepage Image</label>\n                    <input\n                        type=\"file\" id=\"homepage-img\" accept=\"image/*\" name=\"file.jpg\"\n                        onChange={e => handleChange(\"homepage_image\", e.target.files[0]['name'])}\n                    />\n                </div>\n\n                <br />\n                {downloadURL && (<>\n                    <a className=\"pure-button download-btn\" href={downloadURL} download=\"markers.json\">Download Configuration File</a>\n                    <a className=\"pure-button download-btn\" href={`${process.env.PUBLIC_URL}/server-files.zip`} download=\"server-files.zip\">Download Server Files</a>\n                </>)}\n            </div>\n        </div>\n    )\n};\n\n\n\nexport default CreateProject;","import React, { useContext } from 'react';\nimport './UpdateProject.css';\nimport { Context } from \"../../App\"\n\nconst UpdateProject = ({ history }) => {\n    const { setAnswers } = useContext(Context);\n\n    const handleChosenFile = (e) => {\n        let files = e.target.files;\n        let reader = new FileReader();\n        reader.readAsText(files[0]);\n        reader.onload = () => {\n            setAnswers(JSON.parse(reader.result));\n            history.push({\n                pathname: '/project'\n            })\n        }\n    }\n    return (\n        <div>\n            <div >\n                <h1>Project</h1>\n                <h2>Configuration Editor</h2>\n                <input type='file' id='file' className='input-file'\n                    accept='.json' onChange={handleChosenFile} />\n            </div>\n        </div>\n    )\n}\nexport default UpdateProject;","import React from 'react';\nimport './FAQ.scss';\nfunction FAQ() {\n\nreturn (\n            <div className=\"FAQ-ctn\">\n                    <h1><b>FAQ</b></h1>\n                    <h3>Subject 1</h3>\n                    <div>\n                    <dl>\n                        <dt><b>FAQ 1</b></dt>\n                        <dd><small>Answer to FAQ 1</small></dd>\n                        <hr/>\n                        <dt><b>FAQ 2</b></dt>\n                        <dd><small>Answer to FAQ 2</small></dd>\n                        <hr/>\n                        <dt><b>FAQ 3</b></dt>\n                        <dd><small>Answer to FAQ 3</small></dd>\n                        <hr/>\n                    </dl>\n                    </div>\n            </div>\n            )\n};\nexport default FAQ;","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst MapField = ({ handleLocation, currentLatitude, currentLongitude }) => {\n\n  const mapRef = useRef(null);\n  \n  const [position, setPosition] = useState([currentLatitude, currentLongitude]);\n  const [zoom, setZoom] = useState(2);\n\n     const zoomLocation = useCallback((latlong) => {\n    mapRef.current.leafletElement.flyTo(latlong, zoom, {animate: true});\n  }, [zoom]);\n\n  useEffect(() => {\n    const L = require(\"leaflet\");\n\n    delete L.Icon.Default.prototype._getIconUrl;\n\n    L.Icon.Default.mergeOptions({\n      iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n      iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n      shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n    });\n    \n    setPosition([currentLatitude, currentLongitude]);\n    zoomLocation({lat: currentLatitude, lng: currentLongitude});\n\n  }, [currentLatitude, currentLongitude, zoomLocation]);\n\n  const changeLocation = (e) => {\n    const {lat, lng} = e.latlng;\n    setZoom(10);\n    handleLocation(lat, lng);\n  }\n\n  return (\n    <React.Fragment>\n      <LeafletMap \n        style={{height: '20em', margin: '1em 0'}}\n        center={position} zoom={zoom}\n        onClick={changeLocation}\n        ref={mapRef}\n        minZoom={2}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url='https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n        />\n        {position[0] !== 0 && position[1] !== 0 &&\n        <Marker position={position}>\n          <Popup>\n            <span>selected location</span>\n          </Popup>\n        </Marker>\n        }\n      </LeafletMap>\n    </React.Fragment>\n  )\n};\n\nexport default MapField;","import React, { useState, useEffect } from 'react';\nimport createFileList from \"../../../utils/utils\";\n\n// TODO: clean up saving system\n// remove any place where we SetPictures due to dependency exhaust - but it's ugly\nconst LibraryField = ({ handleLibrary, libraryPages }) => {\n\n    const contentTypes = [\"Pictures\", \"Audio\", \"Links\"];\n\n    const [selectedContent, setContent] = useState(0);\n\n    const [pictures, SetPictures] = useState([]);\n    const [audio, SetAudio] = useState([]);\n    const [links, SetLinks] = useState([]);\n\n\n    useEffect(() => {\n        const picturesMedia = destructorObject(libraryPages.filter(media => media.title === \"Pictures\").pop());\n        // cheap way of checking if two arrays are different - to prevent dependency exhaust\n        if (JSON.stringify(pictures) === JSON.stringify(picturesMedia))\n            pictures.forEach((pictureObj, index) => {\n                document.querySelector(`#content-image-${index}`).files = createFileList(pictureObj.item);\n            });\n        else SetPictures(picturesMedia)\n\n        const audioMedia = destructorObject(libraryPages.filter(media => media.title === \"Audio\").pop());\n        SetAudio(audioMedia);\n\n        const linksMedia = destructorObject(libraryPages.filter(media => media.title === \"Links\").pop());\n        SetLinks(linksMedia);\n\n    }, [libraryPages, pictures]); // picture isn't added to dependency since adding a new item will result cause a reload\n\n\n    const handleSelect = (e) => {\n        setContent(e.target.value);\n    };\n\n    const handlePicture = (index, type, e) => {\n        let old = pictures;\n\n        if (type === \"image\") {\n            old[index].item = e.target.files[0]['name'];\n        } else {\n            old[index].item_description = e.target.value;\n        }\n\n        // building using the new data\n        const customBuildObj = contentTypes.map((contentName, index) => {\n            const items = index === 1 ? audio : (index === 2 ? links : old);\n            return (\n                {\n                    \"title\": contentName,\n                    \"content_type\": index,\n                    \"content_items\": items\n                }\n            )\n        });\n\n        handleLibrary(customBuildObj);\n    };\n\n    const handleAudio = (index, type, e) => {\n        let old = audio;\n\n        if (type === \"audio\") {\n            old[index].item = e.target.value;\n        } else {\n            old[index].item_description = e.target.value;\n        }\n\n        SetAudio(old);\n\n        handleSaveAll();\n    };\n\n    const handleLink = (index, type, e) => {\n        let old = links;\n\n        if (type === \"link\") {\n            old[index].item = e.target.value;\n        } else {\n            old[index].item_description = e.target.value;\n        }\n\n        SetLinks(old);\n\n        handleSaveAll();\n    };\n\n    // build the predefined structure to prepare it for saving\n    const buildObject = contentTypes.map((contentName, index) => {\n        const items = index === 1 ? audio : (index === 2 ? links : pictures);\n        return (\n            {\n                \"title\": contentName,\n                \"content_type\": index,\n                \"content_items\": items\n            }\n        )\n    });\n\n    const destructorObject = mediaObj => {\n        if (mediaObj && mediaObj.hasOwnProperty(\"content_items\"))\n            return mediaObj.content_items.map(media => {\n                return {\n                    item: media.item,\n                    item_description: media.item_description\n                }\n            })\n        else return []\n    };\n\n\n    // save all the data as a predefined structure\n    const handleSaveAll = () => {\n        handleLibrary(buildObject);\n    };\n\n    const createContent = () => {\n\n        const content = {\n            \"item\": \"\",\n            \"item_description\": \"\"\n        };\n\n        const customBuildObj = contentTypes.map((contentName, index) => {\n            let items = index === 1 ? audio : (index === 2 ? links : pictures);\n            // we add the new object to the selected item\n            if (parseInt(selectedContent) === index) items = [...items, content]\n            return (\n                {\n                    \"title\": contentName,\n                    \"content_type\": index,\n                    \"content_items\": items\n                }\n            )\n        });\n\n        handleLibrary(customBuildObj);\n\n    };\n\n    return (\n        <React.Fragment>\n            <div className=\"pure-control-group\">\n                <label htmlFor=\"content-type\">Content Type</label>\n                <select name=\"content\" id=\"content-type\" onChange={handleSelect} value={selectedContent}>\n                    {contentTypes.map((contentName, index) => {\n                        return (<option key={index} value={index}>{contentName}</option>)\n                    })}\n                </select>\n            </div>\n            <div className=\"pure-controls\">\n                <button type=\"button\" className=\"pure-button\" onClick={createContent}>Create Content</button>\n            </div>\n\n\n            {pictures.length > 0 && <legend>Pictures</legend>}\n            {pictures.map((picture, index) => {\n                return (\n                    <React.Fragment key={index}>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`content-image-${index}`}>Image file</label>\n                            <input\n                                type=\"file\" id={`content-image-${index}`} placeholder=\"select image\" accept=\"image/*\"\n                                onChange={e => handlePicture(index, \"image\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`picture-descript-${index}`}>Picture Caption</label>\n                            <input\n                                type=\"text\" id={`picture-descript-${index}`} placeholder=\"enter caption\"\n                                value={picture.item_description}\n                                onChange={e => handlePicture(index, \"description\", e)}\n                            />\n\n                        </div>\n                    </React.Fragment>\n                )\n            })}\n\n            {audio.length > 0 && <legend>Audio</legend>}\n            {audio.map((audioObj, index) => {\n                return (\n                    <React.Fragment key={index}>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`content-audio-${index}`}>Audio Link</label>\n                            <input\n                                type=\"text\" id={`content-audio-${index}`} placeholder=\"Audio Link\"\n                                value={audioObj.item}\n                                onChange={e => handleAudio(index, \"audio\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`audio-descript-${index}`}>Audio Description</label>\n                            <input\n                                type=\"text\" id={`audio-descript-${index}`} placeholder=\"enter description\"\n                                value={audioObj.item_description}\n                                onChange={e => handleAudio(index, \"description\", e)}\n                            />\n                        </div>\n\n                    </React.Fragment>\n                )\n            })}\n\n            {links.length > 0 && <legend>Links</legend>}\n            {links.map((link, index) => {\n                return (\n                    <React.Fragment key={index}>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`content-link-${index}`}>Link URL</label>\n                            <input\n                                type=\"text\" id={`content-link-${index}`} placeholder=\"enter link\"\n                                value={link.item}\n                                onChange={e => handleLink(index, \"link\", e)}\n                            />\n                        </div>\n\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`link-descript-${index}`}>Content Description</label>\n                            <input\n                                type=\"text\" id={`link-descript-${index}`} placeholder=\"enter description\"\n                                value={link.item_description}\n                                onChange={e => handleLink(index, \"description\", e)}\n                            />\n                        </div>\n\n                    </React.Fragment>\n                )\n            })}\n\n        </React.Fragment>\n    )\n\n}\n\nexport default LibraryField;\n\n\n","import React, { useState, useEffect } from 'react';\nimport createFileList from \"../../../utils/utils\";\n\nconst MenuField = ({ handleMenu, menuItems }) => {\n\n    const [menu, setMenu] = useState([]);\n\n    useEffect(() => {\n\n        if (JSON.stringify(menu) === JSON.stringify(menuItems))\n            menuItems.forEach((menuObj, index) => {\n                document.querySelector(`#menu-bg-image-${index}`).files = createFileList(menuObj.background_image);\n                document.querySelector(`#menu-audio-${index}`).files = createFileList(menuObj.descriptive_audio);\n            });\n        else setMenu(menuItems)\n\n    }, [menuItems, menu]);\n\n    // add the inital link object to the queue\n    const createLink = () => {\n        const content = {\n            \"title\": \"\",\n            \"description\": \"\",\n            \"background_image\": \"\",\n            \"descriptive_audio\": \"\"\n\n        };\n        handleMenu([...menu, content]);\n    };\n\n    // any changes that is made to the input, we should update the state and global values\n    const handleMenuSave = (index, type, e) => {\n        let old = menu;\n\n        const value = (type === \"title\" || type === \"description\") ? e.target.value : e.target.files[0]['name'];\n        old[index] = { ...old[index], ...{ [type]: value } };\n      \n        handleMenu(old);\n    };\n\n    return (\n        <>\n            <div className=\"pure-controls\">\n                <button type=\"button\" className=\"pure-button\" onClick={createLink}>Create Link</button>\n            </div>\n\n            {menu.length > 0 && <legend>Menu Link</legend>}\n\n            {menu.map((menuObj, index) => {\n                return (\n                    <React.Fragment key={index}>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`menu-title-${index}`}>Menu Link Title</label>\n                            <input\n                                type=\"text\" id={`menu-title-${index}`} placeholder=\"enter title\"\n                                value={menuObj.title}\n                                onChange={e => handleMenuSave(index, \"title\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`menu-descript-${index}`}>Menu Link Description</label>\n                            <input\n                                type=\"text\" id={`menu-descript-${index}`} placeholder=\"enter description\"\n                                value={menuObj.description}\n                                onChange={e => handleMenuSave(index, \"description\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`menu-bg-image-${index}`}>Background Image</label>\n                            <input\n                                type=\"file\" id={`menu-bg-image-${index}`} placeholder=\"select image\" accept=\"image/*\"\n                                onChange={e => handleMenuSave(index, \"background_image\", e)}\n                            />\n                        </div>\n\n                        <div className=\"pure-control-group required\">\n                            <label htmlFor={`menu-audio-${index}`}>Descriptive Audio</label>\n                            <input\n                                type=\"file\" id={`menu-audio-${index}`} placeholder=\"select audio\" accept=\"audio/*\"\n                                onChange={e => handleMenuSave(index, \"descriptive_audio\", e)}\n                            />\n                        </div>\n                    </React.Fragment>\n                )\n            })}\n        </>\n    );\n}\n\nexport default  MenuField;","import React, { useState, useContext, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport MapField from \"./Map/MapField\";\nimport LibraryField from \"./Library/LibraryField\";\nimport MenuField from \"./Menu/MenuField\";\nimport { Context } from \"./../../App\";\nimport createFileList from \"./../../utils/utils\";\nimport './CreateLocation.css';\n\n\nfunction CreateLocation( { history } ) {\n\n  const { Answers, changeAnswer } = useContext(Context);\n\n  const { id } = useParams();\n\n  const [currentID, setCurrentID] = useState(id);\n\n  const INITIAL_STATE = {\n    // location related\n    name: \"\",\n    latitude: 0,\n    longitude: 0,\n    // AR related\n    AR_overlay: \"\",\n    // VR related\n    panorama_image: \"\",\n    VR_overylay: \"\",\n    overlay_size: 10,\n    overlay_offset_x: 0,\n    overlay_offset_y: 0,\n    // audio related\n    start_audio: \"\",\n    // the links\n    main_pages: [],\n    // the library\n    media_pages: []\n  };\n  const [hotspotData, setHotspotData] = useState(INITIAL_STATE);\n\n  // on load, if the id exists, load its data\n  useEffect(() => {\n\n    if (id !== \"new\" && Answers.hotspots.length > id) {\n      const hotspotData = Answers.hotspots[id];\n      setHotspotData(hotspotData);\n      // improper way of doing it, but can't seem to set files attribute properly\n      document.querySelector(\"#ar-overlay\").files = createFileList(hotspotData.AR_overlay);\n      document.querySelector(\"#panorama-img\").files = createFileList(hotspotData.panorama_image);\n      document.querySelector(\"#vr-overlay\").files = createFileList(hotspotData.VR_overylay);\n      document.querySelector(\"#narration-audio\").files = createFileList(hotspotData.start_audio);\n    } else if (id !== currentID) {\n      // update the state to match the parameter\n      setCurrentID(id);\n      // and reset data\n      setHotspotData(INITIAL_STATE);\n\n    }\n  }, [Answers.hotspots, id, currentID, INITIAL_STATE])\n\n  const handleProjectSave = updatedAnswer => {\n    // we add the new item to the array and set it to the current hotspot\n    if (currentID === \"new\") {\n      setCurrentID(Answers.hotspots.length);\n      changeAnswer(\"hotspots\", [...Answers.hotspots, updatedAnswer]);\n      history.replace(\"/hotspot/\" + Answers.hotspots.length)\n    // we only need to update the existing data\n    } else {\n      let old = Answers.hotspots;\n      old[currentID] = updatedAnswer;\n      changeAnswer(\"hotspots\", old)\n    }\n  };\n\n  // if a value is changed it must:\n  const handleChange = (objectName, value) => {\n    // set the new answer value\n    const newAnswer = { ...hotspotData, ...{ [objectName]: value } };\n    setHotspotData(newAnswer);\n    handleProjectSave(newAnswer)\n  };\n\n  const handleLocation = (lat, lng) => {\n    const newAnswer = {\n      ...hotspotData,\n      latitude: lat,\n      longitude: lng\n    };\n    setHotspotData(newAnswer);\n    handleProjectSave(newAnswer);\n  }\n\n  return (\n    <div className=\"newConfigMain\">\n      <div className=\"pure-form pure-form-aligned\">\n       <div className=\"pure-control-group required\">\n        <label htmlFor=\"hotspot-name\">Hotspot name</label>\n        <input\n          type=\"text\" id=\"hotspot-name\" placeholder=\"enter name\"\n          value={hotspotData.name}\n          onChange={e => handleChange(\"name\", e.target.value)}\n        />\n      </div>\n\n      <MapField\n        handleLocation={handleLocation}\n        currentLatitude={hotspotData.latitude}\n        currentLongitude={hotspotData.longitude}\n      />\n\n      <div className=\"pure-control-group required\">\n        <label htmlFor=\"latitude\">Latitude</label>\n        <input\n          type=\"number\" id=\"latitude\" placeholder=\"enter latitude\" min={-90} max={90}\n          value={hotspotData.latitude != null ? hotspotData.latitude : \"\"}\n          onChange={e => handleChange(\"latitude\", e.target.value)}\n        />\n      </div>\n\n      <div className=\"pure-control-group required\">\n        <label htmlFor=\"longitude\">Longitude</label>\n        <input\n          type=\"number\" id=\"longitude\" placeholder=\"enter longitude\" min={-180} max={80}\n          value={hotspotData.longitude != null ? hotspotData.longitude : \"\"}\n          onChange={e => handleChange(\"longitude\", e.target.value)}\n        />\n      </div>\n\n\n      <div className=\"pure-control-group\">\n        <label htmlFor=\"ar-overlay\">AR Overlay</label>\n        <input\n          type=\"file\" id=\"ar-overlay\" placeholder=\"select image\" accept=\"image/*\"\n          onChange={e => handleChange(\"AR_overlay\", e.target.files[0]['name'])}\n        />\n        \n      </div>\n\n\n      <div className=\"pure-control-group\">\n        <label htmlFor=\"panorama-img\">Panorama image</label>\n        <input\n          type=\"file\" id=\"panorama-img\" placeholder=\"select image\" accept=\"image/*\"\n          onChange={e => handleChange(\"panorama_image\", e.target.files[0]['name'])}\n        />\n        \n      </div>\n\n\n      <div className=\"pure-control-group\">\n        <label htmlFor=\"vr-overlay\">VR Overlay</label>\n        <input\n          type=\"file\" id=\"vr-overlay\" placeholder=\"select image\" accept=\"image/*\"\n          onChange={e => handleChange(\"VR_overylay\", e.target.files[0]['name'])}\n        />\n        \n      </div>\n\n      <div className=\"pure-control-group\">\n        <label htmlFor=\"narration-audio\">Narration Audio</label>\n        <input\n          type=\"file\" id=\"narration-audio\" placeholder=\"select audio\" accept=\"audio/*\"\n          onChange={e => handleChange(\"start_audio\", e.target.files[0]['name'])}\n        />\n        \n      </div>\n\n      <LibraryField \n        handleLibrary={data => handleChange(\"media_pages\", data)}\n        libraryPages={hotspotData.media_pages}\n      />\n\n      <MenuField \n        handleMenu={data => handleChange(\"main_pages\", data)}\n        menuItems={hotspotData.main_pages}\n      />\n\n      </div>\n    </div>\n  );\n}\n\nexport default CreateLocation;","import React, { useState } from 'react';\nimport './App.css';\nimport Home from \"./pages/home/Home\";\nimport CreateProject from \"./pages/CreateProject/CreateProject\";\nimport UpdateProject from \"./pages/UpdateProject/UpdateProject\";\nimport FAQ from \"./pages/FAQ/FAQ.js\";\nimport CreateLocation from \"./pages/CreateLocation/CreateLocation\"\nimport { Switch, Route, NavLink, useHistory } from 'react-router-dom';\nimport { string, object, number, array, mixed } from 'yup';\n\nexport const Context = React.createContext();\n\nconst Provider = ({ children }) => {\n\n  const history = useHistory();\n\n  let libraryItemSchema = array().of(object().shape({\n    item: string().required(),\n    item_description: string().required()\n  }));\n\n  let librarySchema = array().of(object().shape({\n    title: string().required(),\n    content_type: number().required(),\n    content_items: libraryItemSchema.required()\n  }));\n\n  let menuSchema = array().of(object().shape({\n    title: string().required(),\n    description: string().required(),\n    background_image: string().required(),\n    descriptive_audio: string().required()\n  }));\n\n  let hotspotSchema = array().of(object().shape({\n    name: string().required(),\n    position: mixed(),\n    latitude: number().required().min(-90).max(90),\n    longitude: number().required().min(-180).max(80),\n    AR_overlay: string(),\n    panorama_image: string(),\n    VR_overylay: string(),\n    overlay_size: number().min(1).max(10),\n    overlay_offset_x: number().min(-9).max(9),\n    overlay_offset_y: number().min(-9).max(9),\n    start_audio: string(),\n    main_pages: menuSchema,\n    media_pages: librarySchema\n  }));\n\n  let schema = object().shape({\n    project_name: string().required(),\n    intro_audio: string(),\n    homepage_image: string(),\n    hotspots: hotspotSchema.required()\n  });\n\n  const [Answers, setAnswers] = useState({\n    project_name: \"\",\n    intro_audio: \"\",\n    homepage_image: \"\",\n    hotspots: [],\n  });\n\n  const changeAnswer = (propertytName, value) => {\n    setAnswers({ ...Answers, ...{ [propertytName]: value } });\n  }\n\n  const checkValidity = async () => {\n    return await schema.isValid(Answers);;\n  }\n\n  const loadExample = async () => {\n    await fetch(process.env.PUBLIC_URL + \"/markers.json\")\n      .then(res => res.json())\n      .then(res => {\n        if (res.hasOwnProperty(\"hotspots\")) {\n          setAnswers(res);\n          history.push({\n            pathname: '/project'\n          })\n        }\n      });\n  }\n\n  return (\n    <Context.Provider value={{\n      Answers,\n      changeAnswer: (propName, val) => changeAnswer(propName, val),\n      setAnswers: answers => setAnswers(answers),\n      checkValidity: () => checkValidity(),\n      loadExample: () => loadExample()\n    }}\n    >\n      {children}\n    </Context.Provider>\n  );\n}\n\n\nconst App = () => {\n\n  return (\n    <Provider>\n      <div className=\"app\">\n        <nav className={\"top-nav\"}>\n\n          <div className=\"pure-menu pure-menu-horizontal\">\n            <ul className=\"pure-menu-list\">\n              <li className=\"pure-menu-item\">\n                <NavLink className=\"pure-menu-link\" to='/'>Home</NavLink>\n              </li>\n\n              <li className=\"pure-menu-item pure-menu-has-children pure-menu-allow-hover\">\n                <NavLink className=\"pure-menu-link\" to='/project'>New Project</NavLink>\n                <ul className=\"pure-menu-children\">\n                  <li className=\"pure-menu-item\">\n                    <NavLink className=\"pure-menu-link\" to='/project'>Configuration Editor</NavLink>\n                  </li>\n                  <Context.Consumer>\n                    {({ loadExample }) => {\n                      return (\n                        <li className=\"pure-menu-item\">\n                          <div tabIndex=\"0\" className=\"pure-menu-link\" onClick={loadExample}>Expert Configuration</div>\n                        </li>\n                      )\n                    }}\n                  </Context.Consumer>\n                </ul>\n              </li>\n\n              <li className=\"pure-menu-item pure-menu-has-children pure-menu-allow-hover\">\n                <NavLink className=\"pure-menu-link\" to='/update'>Edit Project</NavLink>\n                <ul className=\"pure-menu-children\">\n                  <li className=\"pure-menu-item\">\n                    <NavLink className=\"pure-menu-link\" to='/update'>Project Name</NavLink>\n                  </li>\n                </ul>\n              </li>\n\n              <li className=\"pure-menu-item\">\n                <NavLink className=\"pure-menu-link\" to='/faq'>FAQ</NavLink>\n              </li>\n            </ul>\n          </div>\n\n        </nav>\n        <main className={\"content-container\"}>\n          <section className={\"content-section\"}>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/project\" component={CreateProject} />\n              <Route path=\"/hotspot/:id\" component={CreateLocation} />\n              <Route exact path=\"/update\" component={UpdateProject} />\n              <Route exact path=\"/faq\" component={FAQ} />\n            </Switch>\n          </section>\n          <aside className={\"project-side\"}>\n            <h2>New Project</h2>\n            <nav className={\"side-nav\"}>\n              <ul>\n                <li><NavLink to='/project'>Homepage Content</NavLink></li>\n              </ul>\n            </nav>\n            <h3>Hotspots</h3>\n            <nav className={\"hotspot-nav\"}>\n              <Context.Consumer>\n                {({ Answers }) => (\n                  <ul className=\"hotspot-items\">{Answers.hotspots.map((location, index) => {\n                    return (\n                      <li key={index}><NavLink to={`/hotspot/${index}`}>{location.name}</NavLink></li>\n                    )\n\n                  })}</ul>\n                )}\n              </Context.Consumer>\n              <ul>\n                <li className=\"add-hotspot\">\n                  <NavLink to='/hotspot/new'>Add a Hotspot</NavLink>\n                </li>\n              </ul>\n            </nav>\n          </aside>\n        </main>\n        <footer>\n          <ul>\n            <li> FAQ | 2017 &copy; Kent State University | Privacy & Terms of Use </li>\n            <li><img alt=\"NEH Logo\" id=\"logo\" src={`${process.env.PUBLIC_URL}/images/NEH_logo.png`} /></li>\n            <li><img alt=\"KSU Logo\" id=\"logo\" src={`${process.env.PUBLIC_URL}/images/Kent State Logo.png`} /></li>\n\n          </ul>\n        </footer>\n      </div>\n    </Provider>\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nReactDOM.render((\n<BrowserRouter basename=\"/GLARE-editor\">\n  <App />\n  <ToastContainer />\n</BrowserRouter>\n), document.getElementById('root'));\n"],"sourceRoot":""}